<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" >
  <resultMap id="BaseResultMap" type="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 12 11:50:42 CST 2016.
    -->
    <id column="business_area_activity_id" property="businessAreaActivityId" jdbcType="INTEGER" />
    <result column="model_id" property="modelId" jdbcType="INTEGER" />
    <result column="business_area_name" property="businessAreaName" jdbcType="VARCHAR" />
    <result column="activity_status" property="activityStatus" jdbcType="TINYINT" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="act_num" property="actNum" jdbcType="INTEGER" />
    <result column="begin_date" property="beginDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="sign_begin_date" property="signBeginDate" jdbcType="DATE" />
    <result column="sign_end_date" property="signEndDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="activity_desc" property="actDesc" jdbcType="VARCHAR" />
    <result column="activity_protocol" property="activityProtocol" jdbcType="VARCHAR" />
    <result column="activity_share_title" property="activityShareTitle" jdbcType="VARCHAR" />
    <result column="client_system_type" property="clientSystemType" jdbcType="TINYINT" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="shop_type" property="shopType" jdbcType="TINYINT" />
    <result column="activity_url" property="actPosterUrl" jdbcType="VARCHAR" />
    <result column="town_id" property="townId" jdbcType="INTEGER" />
    <result column="town_name" property="townName" jdbcType="VARCHAR" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="join_type" property="joinType" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
     <result column="column_id" property="columnId" jdbcType="TINYINT" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
       <result column="activity_rule_name" property="activityRuleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    business_area_activity_id, model_id, business_area_name, activity_status, shop_id, 
    act_num, begin_date, end_date, sign_begin_date, sign_end_date, create_time, activity_desc, 
    activity_protocol, activity_share_title, client_system_type,activity_rule_name
  </sql>
  <sql id="Base_Column_List_2" >
    business_area_activity_id, model_id, business_area_name, activity_status, act.shop_id, 
    act_num, begin_date, end_date, sign_begin_date, sign_end_date, act.create_time, activity_desc, 
    activity_protocol, activity_share_title, client_system_type,activity_rule_name,c.column_id,c.column_name,p.shop_name
  </sql>
  
    <select id="getBusinessAreaActivityBy" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from 1dcq_business_area_activity
    where 1=1
      <if test="shopId != null" >
        and shop_id = #{shopId}
      </if>
        <if test="businessAreaActivityId != null" >
        and business_area_activity_id = #{businessAreaActivityId}
      </if>
        <if test="date != null" >
          <![CDATA[
			AND begin_date <= #{date} 
            AND end_date >= #{date}  
		]]>
      </if>
  </select>
  
  
  <select id="getBusinessAreaActivityList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List_2" />
    from 1dcq_business_area_activity act,1dcq_shop p left join 1dcq_column c  on p.column_id=c.column_id
    where 1=1 and p.shop_id=act.shop_id
    <if test="businessAreaActivityDto!=null and businessAreaActivityDto.cityId!=null">
     	and p.city_id=#{businessAreaActivityDto.cityId}
    </if>
    <if test="businessAreaActivityDto!=null and businessAreaActivityDto.activityStatus!=null">
    	and activity_status=#{businessAreaActivityDto.activityStatus}
    </if>
    order by create_time desc
    limit #{start},#{limit}
  </select>
  
  <select id="getBusinessAreaActivityCount" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" resultType="java.lang.Integer">
  	select
    count(*)
    from 1dcq_business_area_activity act,1dcq_shop p left join 1dcq_column c  on p.column_id=c.column_id
    where 1=1 and p.shop_id=act.shop_id
    <if test="cityId!=null">
     	and p.city_id=#{cityId}
    </if>
    <if test="activityStatus!=null">
    	and activity_status=#{activityStatus}
    </if>
  </select>
  
  <select id="getBusinessAreaActivityById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    a.business_area_activity_id, a.model_id, a.business_area_name, a.activity_status, a.shop_id, 
    a.act_num, a.begin_date, a.end_date, a.sign_begin_date, a.sign_end_date, a.create_time, a.activity_desc, 
    a.activity_protocol, a.activity_share_title, a.client_system_type,c.column_id,c.column_name,
    t.town_id as town_id,s.shop_name,
  	t.town_name as town_name,
  	a.activity_rule_name
    from 1dcq_business_area_activity a
    left join 1dcq_shop s on a.shop_id=s.shop_id
    left join 1dcq_town t on s.town_id=t.town_id
	LEFT JOIN 1dcq_column c ON s.column_id=c.column_id  
    where business_area_activity_id = #{businessAreaActivityId}
  </select>
  
  <select id="getBusinessAreaActivityByIdWithTown" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	select 
  	a.business_area_name as business_area_name,
  	a.act_num as act_num,
  	a.sign_end_date as sign_end_date,
  	a.begin_date as begin_date,
  	a.end_date as end_date,
  	a.activity_desc as activity_desc,
  	a.activity_status activity_status,
  	t.town_id as town_id,
  	t.town_name as town_name 
  	from 1dcq_business_area_activity a
    left join 1dcq_shop s on a.shop_id=s.shop_id
    left join 1dcq_town t on s.town_id=t.town_id
    where business_area_activity_id = #{businessAreaActivityId}
  </select>
  
  
  <!-- 判断活动是否存在 -->
  <select id="getBusinessAreaActivityExistsById" resultType="java.lang.Integer" parameterType="java.lang.Long">
      select count(*) from 1dcq_business_area_activity where business_area_activity_id = #{businessAreaActivityId}
  </select>
  <delete id="delBusinessAreaActivityById" parameterType="java.lang.Integer" >
    delete from 1dcq_business_area_activity
    where business_area_activity_id = #{businessAreaActivityId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 12 11:50:42 CST 2016.
    -->
    insert into 1dcq_business_area_activity (business_area_activity_id, model_id, 
      business_area_name, activity_status, shop_id, 
      act_num, begin_date, end_date, 
      sign_begin_date, sign_end_date, create_time, 
      activity_desc, activity_protocol, activity_share_title, 
      client_system_type)
    values (#{businessAreaActivityId,jdbcType=INTEGER}, #{modelId,jdbcType=INTEGER}, 
      #{businessAreaName,jdbcType=VARCHAR}, #{activityStatus,jdbcType=TINYINT}, #{shopId,jdbcType=INTEGER}, 
      #{actNum,jdbcType=INTEGER}, #{beginDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{signBeginDate,jdbcType=DATE}, #{signEndDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{actDesc,jdbcType=VARCHAR}, #{activityProtocol,jdbcType=VARCHAR}, #{activityShareTitle,jdbcType=VARCHAR}, 
      #{clientSystemType,jdbcType=TINYINT})
  </insert>
  <insert id="addBusinessAreaActivity" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto"  keyProperty="businessAreaActivityId" useGeneratedKeys="true">
    insert into 1dcq_business_area_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="businessAreaActivityId != null" >
        business_area_activity_id,
      </if>
      <if test="modelId != null" >
        model_id,
      </if>
      <if test="businessAreaName != null" >
        business_area_name,
      </if>
      <if test="activityStatus != null" >
        activity_status,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="actNum != null" >
        act_num,
      </if>
      <if test="beginDate != null" >
        begin_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="signBeginDate != null" >
        sign_begin_date,
      </if>
      <if test="signEndDate != null" >
        sign_end_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="actDesc != null" >
        activity_desc,
      </if>
      <if test="activityProtocol != null" >
        activity_protocol,
      </if>
      <if test="activityShareTitle != null" >
        activity_share_title,
      </if>
      <if test="clientSystemType != null" >
        client_system_type,
      </if>
      <if test="activityRuleName != null" >
        activity_rule_name,
      </if>
      <if test="shopCity != null" >
        city_id,
      </if>
      <if test="shopDistrictId != null" >
        district_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="businessAreaActivityId != null" >
        #{businessAreaActivityId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null" >
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="businessAreaName != null" >
        #{businessAreaName,jdbcType=VARCHAR},
      </if>
      <if test="activityStatus != null" >
        #{activityStatus,jdbcType=TINYINT},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="actNum != null" >
        #{actNum,jdbcType=INTEGER},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="signBeginDate != null" >
        #{signBeginDate,jdbcType=DATE},
      </if>
      <if test="signEndDate != null" >
        #{signEndDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actDesc != null" >
        #{actDesc,jdbcType=VARCHAR},
      </if>
      <if test="activityProtocol != null" >
        #{activityProtocol,jdbcType=VARCHAR},
      </if>
      <if test="activityShareTitle != null" >
        #{activityShareTitle,jdbcType=VARCHAR},
      </if>
      <if test="clientSystemType != null" >
        #{clientSystemType,jdbcType=TINYINT},
      </if>
       <if test="activityRuleName != null" >
         #{activityRuleName,jdbcType=TINYINT},
      </if>
      <if test="shopCity != null" >
        #{shopCity},
      </if>
      <if test="shopDistrictId != null" >
        #{shopDistrictId},
      </if>
    </trim>
  </insert>
  <select id="getShopCountByActivity" resultType="java.lang.Integer" parameterType="java.util.Map">
	select COUNT(DISTINCT businessAreaActivityId )
	from 
	(SELECT 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	IFNULL(bas.shop_type,0) as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id  
		left join 1dcq_attachment a on a.biz_id=baa.business_area_activity_id
  	<where>
  		<if test="shopId!=null">
  			and baa.shop_id=#{shopId}
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  	</where>
  	group by baa.business_area_activity_id
  	
  	union all
  	
  	select 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	0 as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls
	from 1dcq_business_area_activity baa
	LEFT JOIN 1dcq_shop s ON baa.shop_id=s.shop_id 
	LEFT JOIN 1dcq_column c ON s.column_id=c.column_id
	left join 1dcq_attachment a on a.biz_id=baa.business_area_activity_id
	where not EXISTS (select * from 1dcq_business_area_shop bas where bas.business_area_activity_id=baa.business_area_activity_id 
	<if test="shopId!=null">
		and bas.shop_id=#{shopId}
	</if>)
	<if test="cityId!=null">
		and s.city_id=#{cityId}
	</if>
	<if test="activityStatus!=null">
		and baa.activity_status=#{activityStatus}
	</if>
  	group by baa.business_area_activity_id) a
  </select>
  
  <select id="getBusAreaActivitys" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select 
  	ba.business_area_activity_id as business_area_activity_id,
  	ba.business_area_name as business_area_name,
  	ba.sign_end_date as sign_end_date,
  	ba.begin_date as begin_date,
  	ba.end_date as end_date,
  	bas.shop_id as shop_id,
  	s.shop_name as shop_name,
  	bas.shop_type as shop_type,
  	ba.activity_status as activity_status,
  	ba.act_num as act_num,
  	a.file_url as  activity_url 
  	from 1dcq_business_area_shop bas 
  	inner join 1dcq_business_area_activity ba on ba.business_area_activity_id=ba.business_area_activity_id 
  	inner join 1dcq_shop s on bas.shop_id=s.shop_id
  	left join 1dcq_attachment a on a.biz_id=ba.business_area_activity_id 
  	<where>
  		<if test="shopId!=null">
  			and bas.shop_id=#{shopId}
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and ba.activity_status=#{activityStatus}
  		</if>
  	</where> 
  	 limit #{n},#{m}
  </select>
  
   <select id="getAllActivitysCount" resultType="java.lang.Integer" parameterType="java.util.Map">
  	select count(*)
  	from 1dcq_business_area_activity ba
  	inner join 1dcq_shop s on ba.shop_id=s.shop_id
  	<where>
  		<if test="shopId!=null">
  			and ba.shop_id=#{shopId}
  		</if>
  		<if test="shopType!=null">
  			and ba.shop_type=1
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and ba.activity_status=#{activityStatus}
  		</if>
  	</where>
  </select>
  
  <select id="getActivityShopListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(*) 
  	from 1dcq_business_area_shop bas
  	inner join 1dcq_shop s on bas.shop_id=s.shop_id
  	<where>
  		<if test="businessAreaActivityId!=null">
  			and bas.business_area_activity_id=#{businessAreaActivityId} 
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType} 
  		</if>
  		<if test="shopId!=null">
  			and bas.shop_id=#{shopId}
  		</if>
  	</where>
  </select>
  
   <select id="getActivityShopList" parameterType="java.util.Map" resultType="java.util.Map">
  	select 
  	bas.business_area_activity_id as businessAreaActivityId,
  	bas.shop_id as shopId,
  	s.shop_name as shopName,
  	bas.join_time as joinTime,
  	bas.join_type as joinType,
  	s.column_id as columnId, 
	c.column_name as columnName,
	s.address as address,
	s.telephone as telephone,
  	bas.status as status,
  	att.file_url as shopLogoUrl,
  	bas.shop_type as shopType
  	from 1dcq_business_area_shop bas
  	inner join 1dcq_shop s on bas.shop_id=s.shop_id
  	LEFT JOIN 1dcq_column c ON s.column_id=c.column_id
  	left join 1dcq_attachment_relation ar on ar.biz_type=1 and ar.pic_type=1
  	and ar.biz_id=s.shop_id left join 1dcq_attachment att
  	on ar.attachement_id=att.attachement_id
  	<where>
  		<if test="businessAreaActivityId!=null">
  			and bas.business_area_activity_id=#{businessAreaActivityId} 
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType} 
  		</if>
  		<if test="shopId!=null">
  			and bas.shop_id=#{shopId}
  		</if>
  	</where>
  	 limit #{n},#{m}
  </select>
  
   <select id="isJoinActivity" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select count(*) 
  	from 1dcq_business_area_shop
  	where shop_id=#{shopId}
  </select>
  
  <select id="getAllActivitysWithoutJoin" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	
	s.shop_name as shopName,
	0 as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.act_num as actNum,
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls,
	baa.create_time as createTime
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id  
		left join 1dcq_attachment a on a.biz_id=baa.business_area_activity_id
  	<where>
  		<if test="shopType!=null and shopType!=0 ">
  			and baa.shop_id=#{shopId}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  	</where>
  	ORDER BY baa.create_time desc
  	limit #{n},#{m}
  </select>
  
  <select id="getActivitysCountWithoutJoin" parameterType="java.util.Map" resultType="java.lang.Integer">
  	SELECT 
	count(*)
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id  
		left join 1dcq_attachment a on a.biz_id=baa.business_area_activity_id
  	<where>
  		<if test="shopType!=null and shopType!=0 ">
  			and baa.shop_id=#{shopId}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  	</where>
  </select>
  
  
  <select id="getBusAreaAllActivitys" resultType="java.util.Map" parameterType="java.util.Map">
  	select * from (
  	SELECT 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	IFNULL(bas.shop_type,0) as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.act_num as actNum,
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls,
	baa.create_time as createTime
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id
		left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
		left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
  	<where>
  		<if test="shopId!=null">
  			and baa.shop_id=#{shopId}
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  	</where>
  	group by baa.business_area_activity_id
  	
  	union all
  	
  	select 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	0 as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.act_num as actNum,
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls,
	baa.create_time as createTime
	from 1dcq_business_area_activity baa
	LEFT JOIN 1dcq_shop s ON baa.shop_id=s.shop_id 
	LEFT JOIN 1dcq_column c ON s.column_id=c.column_id
	left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
	left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
	where not EXISTS (select * from 1dcq_business_area_shop bas where bas.business_area_activity_id=baa.business_area_activity_id 
	<if test="shopId!=null">
		and bas.shop_id=#{shopId}
	</if>)
	<if test="cityId!=null">
		and s.city_id=#{cityId}
	</if>
	<if test="activityStatus!=null">
		and baa.activity_status=#{activityStatus}
	</if>
  	group by baa.business_area_activity_id) a
  	group by businessAreaActivityId
  	ORDER BY createTime desc
  	limit #{n},#{m}
  </select>
  
  <update id="updateBusinessAreaActivityById" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 12 11:50:42 CST 2016.
    -->
    update 1dcq_business_area_activity
    <set >
      <if test="modelId != null" >
        model_id = #{modelId,jdbcType=INTEGER},
      </if>
      <if test="businessAreaName != null" >
        business_area_name = #{businessAreaName,jdbcType=VARCHAR},
      </if>
      <if test="activityStatus != null" >
        activity_status = #{activityStatus,jdbcType=TINYINT},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="actNum != null" >
        act_num = #{actNum,jdbcType=INTEGER},
      </if>
      <if test="beginDate != null" >
        begin_date = #{beginDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="signBeginDate != null" >
        sign_begin_date = #{signBeginDate,jdbcType=DATE},
      </if>
      <if test="signEndDate != null" >
        sign_end_date = #{signEndDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actDesc != null" >
        activity_desc = #{actDesc,jdbcType=VARCHAR},
      </if>
      <if test="activityProtocol != null" >
        activity_protocol = #{activityProtocol,jdbcType=VARCHAR},
      </if>
      <if test="activityShareTitle != null" >
        activity_share_title = #{activityShareTitle,jdbcType=VARCHAR},
      </if>
      <if test="clientSystemType != null" >
        client_system_type = #{clientSystemType,jdbcType=TINYINT},
      </if>
       <if test="activityRuleName != null" >
        activity_rule_name = #{activityRuleName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete},
      </if>
      <if test="shopCity != null" >
        city_id = #{shopCity},
      </if>
      <if test="shopDistrictId != null" >
        district_id = #{shopDistrictId},
      </if>
    </set>
    where business_area_activity_id = #{businessAreaActivityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 12 11:50:42 CST 2016.
    -->
    update 1dcq_business_area_activity
    set model_id = #{modelId,jdbcType=INTEGER},
      business_area_name = #{businessAreaName,jdbcType=VARCHAR},
      activity_status = #{activityStatus,jdbcType=TINYINT},
      shop_id = #{shopId,jdbcType=INTEGER},
      act_num = #{actNum,jdbcType=INTEGER},
      begin_date = #{beginDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      sign_begin_date = #{signBeginDate,jdbcType=DATE},
      sign_end_date = #{signEndDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      activity_desc = #{actDesc,jdbcType=VARCHAR},
      activity_protocol = #{activityProtocol,jdbcType=VARCHAR},
      activity_share_title = #{activityShareTitle,jdbcType=VARCHAR},
      client_system_type = #{clientSystemType,jdbcType=TINYINT}
    where business_area_activity_id = #{businessAreaActivityId,jdbcType=INTEGER}
  </update>
  
  <select id="getBusinessAreaActivityListByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
  	select 
  	<include refid="Base_Column_List" />
  	 from
  	 1dcq_business_area_activity atc
  	 <where>
  	 	<if test="businessAreaActivityDto.notStatus!=null">
  	 		atc.activity_status!=#{businessAreaActivityDto.notStatus}
  	 	</if>
  	 	<if test="businessAreaActivityDto.shopIdList!=null">
  	 		atc.shop_id in
  	 		<foreach collection="businessAreaActivityDto.shopIdList" open="(" close=")" separator="," item="item">
  	 			#{item}
  	 		</foreach>
  	 	</if>
  	 </where>
  	 <if test="start!=null and limit!=null">
  	 	limit #{start},#{limit}	
  	 </if>
  </select>
  
  <update id="batchUpdateBusinessAreaActivity" parameterType="java.util.Map">
  	 <foreach collection="busAreaActivityList" item="item" index="index" open="" close="" separator=";">  
         update 1dcq_business_area_activity
		    <set >
		      <if test="item.modelId != null" >
		        model_id = #{item.modelId,jdbcType=INTEGER},
		      </if>
		      <if test="item.businessAreaName != null" >
		        business_area_name = #{item.businessAreaName,jdbcType=VARCHAR},
		      </if>
		      <if test="item.activityStatus != null" >
		        activity_status = #{item.activityStatus,jdbcType=TINYINT},
		      </if>
		      <if test="item.shopId != null" >
		        shop_id = #{item.shopId,jdbcType=INTEGER},
		      </if>
		      <if test="item.actNum != null" >
		        act_num = #{item.actNum,jdbcType=INTEGER},
		      </if>
		      <if test="item.beginDate != null" >
		        begin_date = #{item.beginDate,jdbcType=DATE},
		      </if>
		      <if test="item.endDate != null" >
		        end_date = #{item.endDate,jdbcType=DATE},
		      </if>
		      <if test="item.signBeginDate != null" >
		        sign_begin_date = #{item.signBeginDate,jdbcType=DATE},
		      </if>
		      <if test="item.signEndDate != null" >
		        sign_end_date = #{item.signEndDate,jdbcType=DATE},
		      </if>
		      <if test="item.createTime != null" >
		        create_time = #{item.createTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.activityDesc != null" >
		        activity_desc = #{item.activityDesc,jdbcType=VARCHAR},
		      </if>
		      <if test="item.activityProtocol != null" >
		        activity_protocol = #{item.activityProtocol,jdbcType=VARCHAR},
		      </if>
		      <if test="item.activityShareTitle != null" >
		        activity_share_title = #{item.activityShareTitle,jdbcType=VARCHAR},
		      </if>
		      <if test="clientSystemType != null" >
		        client_system_type = #{item.clientSystemType,jdbcType=TINYINT},
		      </if>
		        <if test="activityRuleName != null" >
                activity_rule_name = #{activityRuleName,jdbcType=VARCHAR},
                </if>
		    </set>
		    where business_area_activity_id = #{item.businessAreaActivityId,jdbcType=INTEGER}
		</foreach> 	
  </update>
  
  <select id="queryActivityNumInfo" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from 1dcq_business_area_activity 
  	where business_area_activity_id in
  	<foreach collection="activityList" item="item" open="(" close=")" separator=",">
		#{item.businessAreaActivityId}  		
  	</foreach>
  </select>
  
  <select id="getActivityListByActivityIdList" parameterType="java.util.List" resultMap="BaseResultMap">
  	 select a.*,sh.shop_name,
  	 		sh.column_id,co.column_name
  	  from 1dcq_business_area_activity a left join 1dcq_shop sh on a.shop_id=sh.shop_id left join 1dcq_column co on sh.column_id=co.column_id
  	where a.shop_id=sh.shop_id and business_area_activity_id in
  	<foreach collection="list" item="item" open="(" close=")" separator=",">
		#{item}  		
  	</foreach>	
  	order by create_time desc 
  </select>
  
  
  <!-- 查询活动列表 查询当存在商铺ID，有shopType时的总数（即查询某个商铺参与或者发起的活动）-->
   <select id="getActivitiesNoShopTypeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	SELECT 
	count(*)
	FROM 1dcq_business_area_activity baa
		INNER JOIN 
		1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id and bas.shop_id=#{shopId}
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id
		left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
		left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
  	<where>
  		<if test="shopId!=null">
  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  		<if test="columnId!=null">
  			and s.column_id=#{columnId}
  		</if>
  	</where>
  </select>
  
   <!-- 查询活动列表 查询当存在商铺ID，有shopType时的总数（即查询某个商铺参与或者发起的活动）-->
  <select id="getActivitiesNoShopType" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	IFNULL(bas.shop_type,0) as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.act_num as actNum,
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls,
	baa.create_time as createTime
	FROM 1dcq_business_area_activity baa
		INNER JOIN 
		1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id and bas.shop_id=#{shopId}
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id
		left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
		left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
  	<where>
  		<if test="shopId!=null">
  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
  		</if>
  		<if test="shopType!=null">
  			and bas.shop_type=#{shopType}
  		</if>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  		<if test="columnId!=null">
  			and s.column_id=#{columnId}
  		</if>
  	</where>
	order by baa.create_time DESC
  	limit #{n},#{m}
  </select>
  
  
  <!-- 查询活动列表 查询当存在商铺ID，没有shopType，且鉴权存在时的总数（即查询同城店铺）-->
   <select id="getActivitiesAppCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(*)
  	from (
	  	SELECT 
		baa.business_area_activity_id as businessAreaActivityId, 
		baa.business_area_name as businessAreaName, 
		baa.sign_end_date as signEndDate, 
		baa.begin_date as beginDate, 
		baa.end_date as endDate, 
		baa.shop_id as shopId,
		s.shop_name as shopName,
		IFNULL(bas.shop_type,0) as shopType, 
		s.column_id as columnId, 
		c.column_name as columnName, 
		baa.act_num as actNum,
		baa.activity_status as activityStatus,
		a.file_url as actPosterUrls,
		baa.create_time as createTime
		<!-- 与我有关的活动（我发布或是我参与的） -->
		FROM 1dcq_business_area_activity baa
			INNER JOIN 
			1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id and bas.shop_id=#{shopId}
			LEFT JOIN 
			1dcq_shop s ON baa.shop_id=s.shop_id 
			LEFT JOIN 
			1dcq_column c ON s.column_id=c.column_id
			left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
			left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
	  	<where>
	  		<if test="shopId!=null">
	  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
	  		</if>
	  		<if test="shopType!=null">
	  			and bas.shop_type=#{shopType}
	  		</if>
	  		<if test="cityId!=null">
	  			and s.city_id=#{cityId}
	  		</if>
	  		<if test="activityStatus!=null">
	  			and baa.activity_status=#{activityStatus}
	  		</if>
	  		<if test="columnId!=null">
	  			and s.column_id=#{columnId}
	  		</if>
	  	</where>
	  	
	  	union all
	  	<!-- 没有参与的活动 -->
	  	SELECT 
		baa.business_area_activity_id as businessAreaActivityId, 
		baa.business_area_name as businessAreaName, 
		baa.sign_end_date as signEndDate, 
		baa.begin_date as beginDate, 
		baa.end_date as endDate, 
		baa.shop_id as shopId,
		s.shop_name as shopName,
		0 as shopType, 
		s.column_id as columnId, 
		c.column_name as columnName, 
		baa.act_num as actNum,
		baa.activity_status as activityStatus,
		a.file_url as actPosterUrls,
		baa.create_time as createTime
		FROM 1dcq_business_area_activity baa
			LEFT JOIN 
			1dcq_shop s ON baa.shop_id=s.shop_id 
			LEFT JOIN 
			1dcq_column c ON s.column_id=c.column_id
			left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
			left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
		  	where
		  	  baa.business_area_activity_id in (select DISTINCT(bas.business_area_activity_id) from 1dcq_business_area_shop bas   
			<if test="shopId!=null">
				where bas.shop_id!=#{shopId}
			</if>)
	  		<if test="shopId!=null">
	  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
	  		</if>
	  		<if test="cityId!=null">
	  			and s.city_id=#{cityId}
	  		</if>
	  		<if test="activityStatus!=null">
	  			and baa.activity_status=#{activityStatus}
	  		</if>
	  		<if test="columnId!=null">
	  			and s.column_id=#{columnId}
	  		</if>) activities
  </select>
  
   <!-- 查询活动列表 查询当存在商铺ID，没有shopType时的总数（即查询同城店铺）-->
  <select id="getActivitiesApp" parameterType="java.util.Map" resultType="java.util.Map">
  	select *
  	from (
	  	SELECT 
		baa.business_area_activity_id as businessAreaActivityId, 
		baa.business_area_name as businessAreaName, 
		baa.sign_end_date as signEndDate, 
		baa.begin_date as beginDate, 
		baa.end_date as endDate, 
		baa.shop_id as shopId,
		s.shop_name as shopName,
		IFNULL(bas.shop_type,0) as shopType, 
		s.column_id as columnId, 
		c.column_name as columnName, 
		baa.act_num as actNum,
		baa.activity_status as activityStatus,
		a.file_url as actPosterUrls,
		baa.create_time as createTime
		<!-- 与我有关的活动（我发布或是我参与的） -->
		FROM 1dcq_business_area_activity baa
			INNER JOIN 
			1dcq_business_area_shop bas ON baa.business_area_activity_id=bas.business_area_activity_id and bas.shop_id=#{shopId}
			LEFT JOIN 
			1dcq_shop s ON baa.shop_id=s.shop_id 
			LEFT JOIN 
			1dcq_column c ON s.column_id=c.column_id
			left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
			left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
	  	<where>
	  		<if test="shopId!=null">
	  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
	  		</if>
	  		<if test="shopType!=null">
	  			and bas.shop_type=#{shopType}
	  		</if>
	  		<if test="cityId!=null">
	  			and s.city_id=#{cityId}
	  		</if>
	  		<if test="activityStatus!=null">
	  			and baa.activity_status=#{activityStatus}
	  		</if>
	  		<if test="columnId!=null">
	  			and s.column_id=#{columnId}
	  		</if>
	  	</where>
	  	
	  	union all
	  	<!-- 没有参与的活动 -->
	  	SELECT 
		baa.business_area_activity_id as businessAreaActivityId, 
		baa.business_area_name as businessAreaName, 
		baa.sign_end_date as signEndDate, 
		baa.begin_date as beginDate, 
		baa.end_date as endDate, 
		baa.shop_id as shopId,
		s.shop_name as shopName,
		0 as shopType, 
		s.column_id as columnId, 
		c.column_name as columnName, 
		baa.act_num as actNum,
		baa.activity_status as activityStatus,
		a.file_url as actPosterUrls,
		baa.create_time as createTime
		FROM 1dcq_business_area_activity baa
			LEFT JOIN 
			1dcq_shop s ON baa.shop_id=s.shop_id 
			LEFT JOIN 
			1dcq_column c ON s.column_id=c.column_id
			left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
			left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
		  	where
		  	 baa.business_area_activity_id in (select DISTINCT(bas.business_area_activity_id) from 1dcq_business_area_shop bas 
			<if test="shopId!=null">
				where bas.shop_id!=#{shopId}
			</if>)
	  		<if test="shopId!=null">
	  			and s.city_id=(select s1.city_id from 1dcq_shop s1 where s1.shop_id=#{shopId} limit 1)
	  		</if>
	  		<if test="cityId!=null">
	  			and s.city_id=#{cityId}
	  		</if>
	  		<if test="activityStatus!=null">
	  			and baa.activity_status=#{activityStatus}
	  		</if>
	  		<if test="columnId!=null">
	  			and s.column_id=#{columnId}
	  		</if>
	  		) activities
	  	order by createTime DESC 
	  	limit #{n},#{m}
  </select>
  
  <!-- 查询活动列表 shopId不存在，说明是查询所有，所有活动的shop_type都为1-->
   <select id="getActivitiesNoShopIdCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	SELECT 
	count(*)
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id
		left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
		left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
  	<where>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  		<if test="columnId!=null">
  			and s.column_id=#{columnId}
  		</if>
  	</where>
  </select>
  
	<!-- 查询活动列表 查询当存在商铺ID，有shopType时的总数（即查询某个商铺参与或者发起的活动）-->
  <select id="getActivitiesNoShopId" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
	baa.business_area_activity_id as businessAreaActivityId, 
	baa.business_area_name as businessAreaName, 
	baa.sign_end_date as signEndDate, 
	baa.begin_date as beginDate, 
	baa.end_date as endDate, 
	baa.shop_id as shopId,
	s.shop_name as shopName,
	1 as shopType, 
	s.column_id as columnId, 
	c.column_name as columnName, 
	baa.act_num as actNum,
	baa.activity_status as activityStatus,
	a.file_url as actPosterUrls,
	baa.create_time as createTime
	FROM 1dcq_business_area_activity baa
		LEFT JOIN 
		1dcq_shop s ON baa.shop_id=s.shop_id 
		LEFT JOIN 
		1dcq_column c ON s.column_id=c.column_id
		left join 1dcq_attachment_relation ar ON ar.biz_id=baa.business_area_activity_id
		left join 1dcq_attachment a on a.attachement_id=ar.attachement_id 
  	<where>
  		<if test="cityId!=null">
  			and s.city_id=#{cityId}
  		</if>
  		<if test="activityStatus!=null">
  			and baa.activity_status=#{activityStatus}
  		</if>
  		<if test="columnId!=null">
  			and s.column_id=#{columnId}
  		</if>
  	</where>
	order by baa.create_time DESC 
  	limit #{n},#{m}
  </select>
  
  <!--根据商铺ID查询该商铺下所有的商铺 -->
   <select id="getActivitiesByShopId" parameterType="com.idcq.appserver.dto.activity.BusinessAreaActivityDto" resultMap="BaseResultMap">
  	 select *
  	  from 1dcq_business_area_activity baa
  	where baa.shop_id=#{shopId}
  	<if test="businessAreaActivityId!=null">
  		and business_area_activity_id!=#{businessAreaActivityId}
  	</if>
  </select>
  
  <select id="getBusAreaActivityListWithShopId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.business_area_activity_id AS businessAreaActivityId,a.business_area_name AS businessAreaName,a.sign_end_date AS signEndDate,a.begin_date AS beginDate,a.end_date AS endDate,a.shop_id AS shopId,
		a.shop_name AS shopName,a.act_num AS actNum,a.activity_status AS activityStatus,a.column_id AS columnId,a.column_name AS columnName,bs.shop_type AS shopType
		FROM (
				SELECT bus.create_time,bus.business_area_activity_id,bus.business_area_name,bus.sign_end_date,bus.begin_date,bus.end_date,bus.shop_id,s.shop_name,bus.act_num,bus.activity_status,col.column_id,col.column_name
				FROM 1dcq_business_area_activity AS bus 
				INNER JOIN 1dcq_shop AS s 
				ON bus.shop_id = s.shop_id
				INNER JOIN 1dcq_column AS col
				ON s.column_id = col.column_id
				WHERE
				<if test="cityId != null">
					bus.city_id = #{cityId}
				</if>
				<if test="cityId == null">
					bus.city_id = (SELECT city_id FROM 1dcq_shop WHERE shop_id = #{shopId} )
				</if>
				<if test="columnId != null">
  					AND col.column_id = #{columnId}
  				</if>
				<if test="activityStatus != null">
  					AND bus.activity_status = #{activityStatus}
  				</if>
  				AND bus.is_delete = 0
		) AS a
		INNER JOIN 1dcq_business_area_shop AS bs
		ON a.business_area_activity_id = bs.business_area_activity_id
		<if test="shopType != null">
			WHERE bs.shop_id = #{shopId}
  		 	AND bs.shop_type = #{shopType} 
  		</if>
  		GROUP BY a.business_area_activity_id
  		ORDER BY a.create_time DESC
  		LIMIT #{pageNo},#{pageSize}
  </select>
  
  <select id="getBusAreaActivityListWithShopIdCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM 
		(SELECT a.business_area_activity_id AS businessAreaActivityId
		FROM (
				SELECT bus.business_area_activity_id,bus.business_area_name,bus.sign_end_date,bus.begin_date,bus.end_date,bus.shop_id,s.shop_name,bus.act_num,bus.activity_status,col.column_id,col.column_name
				FROM 1dcq_business_area_activity AS bus 
				INNER JOIN 1dcq_shop AS s 
				ON bus.shop_id = s.shop_id
				INNER JOIN 1dcq_column AS col
				ON s.column_id = col.column_id
				WHERE 
				<if test="cityId != null">
					bus.city_id = #{cityId}
				</if>
				<if test="cityId == null">
					bus.city_id = (SELECT city_id FROM 1dcq_shop WHERE shop_id = #{shopId} )
				</if>
				<if test="columnId != null">
  					AND col.column_id = #{columnId}
  				</if>
				<if test="activityStatus != null">
  					AND bus.activity_status = #{activityStatus}
  				</if>
  				AND bus.is_delete = 0
		) AS a
		INNER JOIN 1dcq_business_area_shop AS bs
		ON a.business_area_activity_id = bs.business_area_activity_id
		<if test="shopType != null">
			WHERE bs.shop_id = #{shopId}
  		 	AND bs.shop_type = #{shopType} 
  		</if>
  		GROUP BY a.business_area_activity_id) act
  </select>
  
 <select id="getBusAreaActivityListWithOutShopId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.business_area_activity_id AS businessAreaActivityId,a.business_area_name AS businessAreaName,a.sign_end_date AS signEndDate,a.begin_date AS beginDate,a.end_date AS endDate,a.shop_id AS shopId,
		a.shop_name AS shopName,a.act_num AS actNum,a.activity_status AS activityStatus,a.column_id AS columnId,a.column_name AS columnName,bs.shop_type AS shopType
		FROM (
				SELECT bus.create_time,bus.business_area_activity_id,bus.business_area_name,bus.sign_end_date,bus.begin_date,bus.end_date,bus.shop_id,s.shop_name,bus.act_num,bus.activity_status,col.column_id,col.column_name
				FROM 1dcq_business_area_activity AS bus 
				INNER JOIN 1dcq_shop AS s 
				ON bus.shop_id = s.shop_id
				INNER JOIN 1dcq_column AS col
				ON s.column_id = col.column_id
			  	<where>
			  		 <if test="cityId != null">
						AND bus.city_id = #{cityId}
					 </if>
	 				 <if test="columnId != null">
  					    AND col.column_id = #{columnId}
  				     </if>
				     <if test="activityStatus != null">
  					    AND bus.activity_status = #{activityStatus}
  				     </if>
  				     AND bus.is_delete = 0
			    </where>

		) AS a
		INNER JOIN 1dcq_business_area_shop AS bs
		ON a.business_area_activity_id = bs.business_area_activity_id
	   <where>
 			<if test="shopType != null">
  		 		AND bs.shop_type = #{shopType} 
  			</if>
	   </where>
	   GROUP BY a.business_area_activity_id
	   ORDER BY a.create_time DESC
  	   LIMIT #{pageNo},#{pageSize}
  </select>
  
  <select id="getBusAreaActivityListWithOutShopIdCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM 
		(SELECT a.business_area_activity_id AS businessAreaActivityId
		FROM (
				SELECT bus.business_area_activity_id,bus.business_area_name,bus.sign_end_date,bus.begin_date,bus.end_date,bus.shop_id,s.shop_name,bus.act_num,bus.activity_status,col.column_id,col.column_name
				FROM 1dcq_business_area_activity AS bus 
				INNER JOIN 1dcq_shop AS s 
				ON bus.shop_id = s.shop_id
				INNER JOIN 1dcq_column AS col
				ON s.column_id = col.column_id
			  	<where>
			  		 <if test="cityId != null">
						AND bus.city_id = #{cityId}
					 </if>
	 				 <if test="columnId != null">
  					    AND col.column_id = #{columnId}
  				     </if>
				     <if test="activityStatus != null">
  					    AND bus.activity_status = #{activityStatus}
  				     </if>
  				     AND bus.is_delete = 0
			    </where>
		) AS a
		INNER JOIN 1dcq_business_area_shop AS bs
		ON a.business_area_activity_id = bs.business_area_activity_id
	   <where>
 			<if test="shopType != null">
  		 		AND bs.shop_type = #{shopType} 
  			</if>
	   </where>
	   GROUP BY a.business_area_activity_id) act
  </select> 
</mapper>