<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idcq.appserver.dto.bill.ShopBillDto" >
 <resultMap id="BaseResultMap" type="com.idcq.appserver.dto.bill.ShopBillDto" >
    <id column="bill_id" property="billId"  />
    <result column="shop_id" property="shopId" />
    <result column="bill_type" property="billType"  />
    <result column="bill_direction" property="billDirection" jdbcType="INTEGER" />
    <result column="bill_status" property="billStatus"  />
    <result column="money" property="money"  />
    <result column="account_amount" property="accountAmount" jdbcType="DOUBLE" />
    <result column="account_after_amount" property="accountAfterAmount" />
    <result column="transaction_id" property="transactionId" />
    <result column="order_id" property="orderId" />
    <result column="consumer_user_id" property="consumerUserId" />
    <result column="consumer_mobile" property="consumerMobile" />
    <result column="goods_id" property="goodsId" />
    <result column="goods_number" property="goodsNumber" /> 
    <result column="goods_settle_price" property="goodsSettlePrice" /> 
     <result column="settle_price" property="settlePrice" />    
    <result column="platform_total_income_price" property="platformTotalIncomePrice" />
     <result column="pay_amount" property="payAmount" />
      <result column="create_time" property="createTime" />
     <result column="settle_time" property="settleTime" />
    <result column="bill_desc" property="billDesc" />
    <result column="account_type" property="accountType" />
    <result column="comment" property="comment" />
    <result column="bill_title" property="billTitle" />
    <result column="red_packet_id" property="redPacketId" />
  </resultMap>
 	
   <sql id="Base_Column_List">
      bill_id, shop_id, bill_type, bill_direction, bill_status, money, account_amount, account_after_amount, 
      transaction_id, order_id,  consumer_user_id, consumer_mobile,  goods_id, goods_number, goods_settle_price,
      settle_price, platform_total_income_price, pay_amount, create_time, settle_time, bill_desc, account_type,
      comment,bill_title, red_packet_id
  </sql>
 
  <insert id="insertShopBill" parameterType="com.idcq.appserver.dto.bill.ShopBillDto">
       	insert into 1dcq_shop_bill
    	     (shop_id,
			  bill_type,
			  bill_direction,
			  bill_status,
			  money,
			  account_amount,
			  account_after_amount,
			  account_type,
			  transaction_id,
			  order_id,
			  consumer_user_id, 
			  consumer_mobile,
			  settle_price,
			  platform_total_income_price,
			  pay_amount,
			  create_time,
			  settle_time,
			  bill_desc,
			  goods_number,
			  goods_id,
			  goods_settle_price,
			  comment,
			  bill_title,
			  red_packet_id)
    	values
    	   (#{shopId},
    	    #{billType},
    	    #{billDirection},
    	    #{billStatus}, 
    	    #{money}, 
    	    #{accountAmount}, 
    	    #{accountAfterAmount}, 
    	    #{accountType},
    	    #{transactionId},
    	    #{orderId},
    	    #{consumerUserId},
    	    #{consumerMobile},
    	    #{settlePrice},
    	    #{platformTotalIncomePrice},
    	    #{payAmount},
    	    #{createTime},
    	    #{settleTime},
    	    #{billDesc},
    	    #{goodsNumber},
    	    #{goodsId},
    	    #{goodsSettlePrice},
    	    #{comment},
    	    #{billTitle},
    	    #{redPacketId})
   </insert>
   <!-- 查询商铺账单 -->
  <select id="getShopBill" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			s.bill_id AS billId,
			s.bill_type AS billType,
			s.money AS money,
			s.bill_status AS billStatus,
			s.bill_direction AS billDirection,
			s.bill_desc AS billDesc,
			s.account_type AS accountType
		FROM
			1dcq_shop_bill s
		WHERE
			s.shop_id = #{shopId}
		<if test="transactionId!=null">
			AND s.transaction_id = #{transactionId}
		</if>
		<if test="billType!=null">
			AND s.bill_type = #{billType}
		</if>
		<if test="billStatus!=null">
			AND s.bill_status = #{billStatus}
		</if>
		<if test="billDirection">
			AND s.bill_direction = #{billDirection}
		</if>
		<if test="startTime!=null">
			AND s.create_time >= #{startTime}
		</if>
		<if test="endTime!=null">
			<![CDATA[
				AND s.create_time <= #{endTime}
			]]>  
		</if>
		LIMIT #{n},#{m}
  </select> 
   <!-- 查询商铺账单列总记录-->
  <select id="getShopBillCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM
			1dcq_shop_bill s
		WHERE
			s.shop_id = #{shopId}
		<if test="transactionId!=null">
			AND s.transaction_id = #{transactionId}
		</if>			
		<if test="billType!=null">
			AND s.bill_type = #{billType}
		</if>
		<if test="billStatus!=null">
			AND s.bill_status = #{billStatus}
		</if>
		<if test="startTime!=null">
			AND s.create_time >= #{startTime}
		</if>
		<if test="endTime!=null">
			<![CDATA[
				AND s.create_time <= #{endTime}
			]]>  
		</if>
  </select> 
   
  
   <update id="updateShopBill" parameterType="com.idcq.appserver.dto.bill.ShopBillDto">  
	  	update 1dcq_shop_bill
	    <set>
	      <if test="billStatus != null" >
	        bill_status=#{billStatus},settle_time=NOW(),
	      </if>
	        <if test="settlePrice != null" >
	        settle_price=#{settlePrice},
	      </if>
	    </set>
	    where order_id = #{orderId}
  </update> 
  
    <update id="updateShopBillById" parameterType="com.idcq.appserver.dto.bill.ShopBillDto">  
	  	update 1dcq_shop_bill
	    <set>
	      <if test="billStatus != null" >
	        bill_status=#{billStatus},settle_time=NOW(),
	      </if>
	        <if test="settlePrice != null" >
	        settle_price=#{settlePrice},
	      </if>
	    </set>
	    where bill_id = #{billId}
  </update> 
  
  	<!-- 更新账单状态 -->
    <update id="updateShopBillByTransactionId" parameterType="com.idcq.appserver.dto.bill.ShopBillDto">
    	UPDATE 
    		1dcq_shop_bill
    	SET
    	   bill_status = #{billStatus}
    	WHERE 
    	   transaction_id = #{transactionId}
    </update>
    
  <select id="getShopBillByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			s.bill_id,
			s.bill_type,
			s.money,
			s.bill_status,
			s.bill_desc,
			s.shop_id
		FROM
			1dcq_shop_bill s
		WHERE
			s.order_id = #{orderId}
	    AND s.bill_status = #{billStatus}
  </select> 
  
     <!-- 查询商铺非会员和会员账单 -->
  <select id="getShopCombineBill" parameterType="java.util.Map" resultType="java.util.Map">
  		
  		select * from (
  			(select 
	  		   x.xorder_id as billId,
	  		   1 as billType,
	  		   settle_price as money,
	  		   1 as billDirection,
	  		   x.order_title as billDesc,
	  		   x.order_time as billTime,
	  		   x.xorder_id as orderId,
	  		   x.xorder_id as transactionId,
	  		   1 as type
	  		  from 
	  		  1dcq_xorder x
	  		  where x.shop_id=#{shopId}
	  		  and x.pay_status=1
	  		  and x.order_status=3
	  		  <if test="startTime!=null">
				AND x.order_time >= #{startTime}
			 </if>
			 <if test="endTime!=null">
				<![CDATA[
					AND x.order_time <= #{endTime}
				]]>  
			 </if>
	  		)
	  		union
			(SELECT
				s.bill_id AS billId,
				s.bill_type AS billType,
				s.money AS money,
				s.bill_direction AS billDirection,
				s.bill_desc AS billDesc
				,s.settle_time as billTime
				,s.order_id as orderId,
				s.transaction_id as transactionId,
				2 as type
			FROM
				1dcq_shop_bill s
			WHERE
				s.shop_id = #{shopId}
			<if test="billType!=null">
				AND s.bill_type = #{billType}
			</if>
			<if test="billStatus!=null">
				AND s.bill_status = #{billStatus}
			</if>
			<if test="startTime!=null">
				AND s.create_time >= #{startTime}
			</if>
			<if test="endTime!=null">
				<![CDATA[
					AND s.create_time <= #{endTime}
				]]>  
			</if>
			)
			)bill
		LIMIT #{n},#{m}
  </select> 
  
  <select id="getShopCombineBillCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  		select SUM(num) from (
  			(select 
	  		   count(*) num
	  		  from 1dcq_xorder x
	  		  where x.shop_id=#{shopId}
	  		  and x.pay_status=1
	  		  and x.order_status=3
	  		  <if test="startTime!=null">
				AND x.order_time >= #{startTime}
			 </if>
			 <if test="endTime!=null">
				<![CDATA[
					AND x.order_time <= #{endTime}
				]]>  
			 </if>
	  		)
	  		union
			(SELECT
				count(*) num
			FROM
				1dcq_shop_bill s
			WHERE
				s.shop_id = #{shopId}
				and s.bill_status=2
			<if test="billType!=null">
				AND s.bill_type = #{billType}
			</if>
			<if test="billStatus!=null">
				AND s.bill_status = #{billStatus}
			</if>
			<if test="startTime!=null">
				AND s.create_time >= #{startTime}
			</if>
			<if test="endTime!=null">
				<![CDATA[
					AND s.create_time <= #{endTime}
				]]>  
			</if>
			)
			)bill
  </select>
  
  <select id="getIdcqBillStatistics" parameterType="java.util.Map" resultType="java.util.Map">
  			select statisDate as billDate,sum(money) as money from
  			(select 
	  		   sum(settle_price) as money,
	  		   date(x.order_time) as statisDate
	  		  from 
	  		  1dcq_xorder x
	  		  where x.shop_id=#{shopId}
	  		  and x.pay_status=1
	  		  and x.order_status=3
	  		  <if test="startTime!=null">
				AND x.order_time >= #{startTime}
			 </if>
			 <if test="endTime!=null">
				<![CDATA[
					AND x.order_time <= #{endTime}
				]]>  
			 </if>
			 group by statisDate
	  		union all
  			SELECT
				sum(s.money) AS money,
				date(s.settle_time) AS statisDate
			FROM
				1dcq_shop_bill s
			WHERE
				s.shop_id = #{shopId}
			 and s.bill_status=2
			<if test="startTime!=null">
				AND s.settle_time >= #{startTime}
			</if>
			<if test="endTime!=null">
				<![CDATA[
					AND s.settle_time <= #{endTime}
				]]>  
			</if>
			group by statisDate
			)st
			group by statisDate
  </select>
  
  <select id="getIdcqBillStatisticsCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  		   	select count(*) as statisCount from
  			(select 
	  		   sum(settle_price) as money,
	  		   date(x.order_time) as statisDate
	  		  from 
	  		  1dcq_xorder x
	  		  where x.shop_id=#{shopId}
	  		  and x.pay_status=1
	  		  and x.order_status=3
	  		  <if test="startTime!=null">
				AND x.order_time >= #{startTime}
			 </if>
			 <if test="endTime!=null">
				<![CDATA[
					AND x.order_time <= #{endTime}
				]]>  
			 </if>
			 group by statisDate
	  		union all
  			SELECT
				sum(s.money) AS money,
				data(s.settle_time) AS statisDate
			FROM
				1dcq_shop_bill s
			WHERE
				s.shop_id = #{shopId}
			 and s.bill_status=2
			<if test="startTime!=null">
				AND s.settle_time >= #{startTime}
			</if>
			<if test="endTime!=null">
				<![CDATA[
					AND s.settle_time <= #{endTime}
				]]>  
			</if>
			group by statisDate
			)
  </select>
  
  <select id="queryShopBill" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  			SELECT
			s.bill_id,
			s.bill_type,
			s.money,
			s.bill_status,
			s.bill_desc,
			s.shop_id,
			s.order_id,
			s.settle_time
		FROM
			1dcq_shop_bill s
		WHERE
		s.bill_id=#{billId}
  </select>
  
  <select id="getIdcqBillStatisticsAmount" resultType="java.lang.Double" parameterType="java.util.Map">
  		select sum(money) as money from
  			(
  			<if test="billDirection==1">
	  			select 
		  		   sum(settle_price) as money
		  		  from 
		  		  1dcq_xorder x
		  		  where x.shop_id=#{shopId}
		  		  and x.pay_status=1
		  		  and x.order_status=3
		  		  <if test="startTime!=null">
					AND x.order_time >= #{startTime}
				 </if>
				 <if test="endTime!=null">
					<![CDATA[
						AND x.order_time <= #{endTime}
					]]>  
				 </if>
		  		union all
	  		</if>
  			SELECT
				sum(s.money) AS money
			FROM
				1dcq_shop_bill s
			WHERE
				s.shop_id = #{shopId}
			 and s.bill_status=2
			 and s.bill_direction=#{billDirection}
			<if test="startTime!=null">
				AND s.settle_time >= #{startTime}
			</if>
			<if test="endTime!=null">
				<![CDATA[
					AND s.settle_time <= #{endTime}
				]]>  
			</if>
			)st
  </select>
    <!-- 新增临时账单 -->
  <insert id="insertShopMiddleBill" parameterType="com.idcq.appserver.dto.bill.ShopBillDto">
       	insert into 1dcq_shop_bill_middle
    	     (shop_id,
			  bill_type,
			  bill_direction,
			  bill_status,
			  money,
			  account_amount,
			  account_type,
			  transaction_id,
			  order_id,
			  consumer_user_id, 
			  consumer_mobile,
			  settle_price,
			  platform_total_income_price,
			  pay_amount,
			  create_time,
			  settle_time,
			  bill_desc,
			  goods_number,
			  goods_id,
			  goods_settle_price,
			  comment,
			  bill_title,
			  red_packet_id) 
    	values
    	   (#{shopId},
    	    #{billType},
    	    #{billDirection},
    	    #{billStatus}, 
    	    #{money}, 
    	    #{accountAmount}, 
    	    #{accountType},
    	    #{transactionId},
    	    #{orderId},
    	    #{consumerUserId},
    	    #{consumerMobile},
    	    #{settlePrice},
    	    #{platformTotalIncomePrice},
    	    #{payAmount},
    	    #{createTime},
    	    #{settleTime},
    	    #{billDesc},
    	    #{goodsNumber},
    	    #{goodsId},
    	    #{goodsSettlePrice},
    	    #{comment},
    	    #{billTitle},
    	    #{redPacketId})
   </insert>
  <select id="getShopBillMiddleByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from 1dcq_shop_bill_middle
    where order_id=#{orderId}
  </select>
  
  <delete id="deleteShopBillMiddle" parameterType="java.util.Map">
     delete 
     from  1dcq_shop_bill_middle 
     where order_id=#{orderId}
     <if test="shopBillIds != null">
        and bill_id not in
   	 <foreach collection="shopBillIds" open="(" close=")" separator="," item="item">
		 #{item}   		 	
   	 </foreach>
     </if>
  </delete>
  
  <!-- CS19：查询店铺账户账单统计接口 2015.12.2 add by huangrui -->
  <select id="getShopBillStat" resultType="java.util.Map" parameterType="java.util.Map" >
    SELECT 
  		bill_type AS moneyType,
  		SUM(money) AS money,
  		account_type AS accountType
	FROM
  		1dcq_shop_bill 
	WHERE shop_id IN 
	    <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
        </foreach>   
 		AND account_type IN
 	  <foreach collection="accountType" open="(" close=")" separator="," item="item">
		 #{item}   		 	
   	  </foreach>
 		<if test="moneyType != null">
 		    AND bill_type IN 
 		    <foreach collection="moneyType" open="(" close=")" separator="," item="item">
 		        #{item}
 		    </foreach>
 		</if>
 		<![CDATA[
			AND DATE(create_time) >= #{startTime} 
		]]>
		<![CDATA[
			AND DATE(create_time) <= #{endTime} 
		]]>
	GROUP BY bill_type 
  </select>
  
   <!-- CS20：查询店铺账户账单明细接口 2015.12.2 add by huangrui -->
  <select id="getShopBillDetailCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT 
  		count(1) 
	FROM
  		1dcq_shop_bill 
	WHERE shop_id IN 
	    <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
        </foreach>    
 		AND account_type IN
 		<foreach collection="accountType" open="(" close=")" separator="," item="item">
		 #{item}   		 	
   	    </foreach>  
 		<if test="moneyType != null">
 		    AND bill_type IN 
 		    <foreach collection="moneyType" open="(" close=")" separator="," item="item">
 		        #{item}
 		    </foreach>
 		</if>
 		<if test="startTime != null ">
 		    <![CDATA[
			AND DATE(create_time) >= #{startTime}  
		]]>
 		</if>
 		<if test="endTime != null ">
 		   <![CDATA[
			AND DATE(create_time) <= #{endTime}  
		]]>
 		</if>

  </select>
  
   <!-- CS20：查询店铺账户账单明细接口 2015.12.2 add by huangrui -->
  <select id="getShopBillDetail" resultType="java.util.Map" parameterType="java.util.Map" >
    SELECT 
 		b.bill_id AS billId,
 		b.transaction_id AS transactionId,
 		b.red_packet_id AS redPacketId,
  		b.create_time AS billTime, 
  		b.bill_title AS `desc`, 
  		b.bill_type AS moneyType, 
		(CASE  
			WHEN b.bill_type=1 THEN b.order_id 
			WHEN b.bill_type=2 THEN b.order_id  
			WHEN b.bill_type=6 THEN b.order_id 
			WHEN b.bill_type=41 THEN b.order_id 
			WHEN b.bill_type=60 THEN b.order_id
			WHEN b.bill_type=61 THEN b.order_id
			ELSE  b.transaction_id
		 END) AS orderId, 
 	 	truncate(b.money,4) AS money, 
  		truncate(b.account_after_amount,4) AS balance,
  		b.account_type AS accountType
	FROM
  		1dcq_shop_bill b 
	WHERE b.shop_id  IN
	    <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
        </foreach>   
        <if test="accountType != null">
 		AND b.account_type IN
	 	   <foreach collection="accountType" open="(" close=")" separator="," item="item">
			 #{item}   		 	
	   	  </foreach>
   	  </if>
 		<if test="billId != null">
 		    AND b.bill_Id  = #{billId}
 		</if>
 		<if test="moneyType != null">
 		    AND b.bill_type IN 
 		    <foreach collection="moneyType" open="(" close=")" separator="," item="item">
 		        #{item}
 		    </foreach>
 		</if>
 		<if test="startTime != null ">
 		    <![CDATA[
			AND DATE(b.create_time) >= #{startTime}  
		]]>
 		</if>
 		<if test="endTime != null ">
 		   <![CDATA[
			AND DATE(b.create_time) <= #{endTime}  
		]]>
 		</if>
		
	 ORDER BY b.create_time desc,b.bill_id desc limit #{n},#{m}
  </select>
  
  <select id="getShopRewardTotalBy" resultType="java.lang.Double" parameterType="java.util.Map" >
      SELECT IFNULL(SUM(money), 0) 
      FROM 1dcq_shop_bill 
      WHERE shop_id IN
      <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
      </foreach>  
      <if test="billType != null">
      		 AND bill_type = #{billType}
      </if>
      <if test="startTime != null">
          <![CDATA[
			AND DATE(settle_time) >= #{startTime}  
		]]>
      </if> 
     <if test="endTime != null ">
         <![CDATA[
			AND DATE(settle_time) <= #{endTime}  
	    ]]>
     </if>
		
  </select>
  
<!-- 获取时间段转充总和 -->
	<select id="getchargeTotalMoney" resultType="java.util.Map" parameterType="java.util.Map">
	
	select 
		SUM(money)  as chargeTotalMoney
	from 
		1dcq_shop_bill sb 
	where 
		sb.shop_id = #{shopId}
	AND
		account_type = #{accountType}
	AND
		sb.bill_type = #{billType}
	<if test="startTime">
	    AND sb.create_time > #{startTime} 
	</if>
	 <if test="endTime">
		 <![CDATA[
		    AND sb.create_time <= #{endTime}
		  ]]>
	  </if>
		
	</select>
  <select id="getShopBillSumMoney" parameterType="java.util.Map" resultType="double">
    	select ifnull(sum(money),0) 
    	from 1dcq_shop_bill
    	where order_id=#{orderId}
    	<if test="accountType != null">
    		and account_type=#{accountType}
    	</if>
   </select>  	
</mapper>