<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idcq.appserver.dto.pay.XorderPayDto" >
  <resultMap id="BaseResultMap" type="com.idcq.appserver.dto.pay.XorderPayDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 11 11:00:47 CST 2015.
    -->
    <id column="xorder_pay_id" property="xorderPayId" jdbcType="BIGINT" />
    <result column="xorder_id" property="xorderId" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="pay_id" property="payId" jdbcType="INTEGER" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="order_pay_type" property="orderPayType" jdbcType="TINYINT" />
    <result column="order_pay_time" property="orderPayTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="payee_type" property="payeeType" jdbcType="TINYINT" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="pay_index" property="payIndex" jdbcType="TINYINT" />
    <result column="user_pay_time" property="userPayTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 11 11:00:47 CST 2015.
    -->
    xorder_pay_id, xorder_id, pay_type, pay_id, pay_amount, order_pay_type, order_pay_time, 
    last_update_time, payee_type, shop_id,pay_index,user_pay_time
  </sql>
 
  <!-- 获取最大支付序号 -->
  <select id="getMaxPayIndex" parameterType="java.lang.String" resultType="java.lang.Integer">
      select max(pay_index) from 1dcq_xorder_pay where xorder_id = #{xorderId}
  </select>
  <!-- 根据订单编号查询所有支付记录 -->
  <select id="getAllPayLog" parameterType="java.lang.String" resultMap="BaseResultMap">
      select 
    <include refid="Base_Column_List" />
    from 1dcq_xorder_pay
    where xorder_id = #{xorderId}
  </select>
  <!-- 获取订单的支付金额 -->
  <select id="getTotalPayAmountByXorderId" resultType="java.math.BigDecimal" parameterType="java.lang.String">
      SELECT
		round(IFNULL(SUM(pay_amount), 0), 2) AS payAmount
	FROM
		1dcq_xorder_pay t
	WHERE
		t.xorder_id = #{xorderId}
  </select>
  <!-- 查询订单支付记录，返回map -->
  <select id="getPayLogByXorderId" resultType="java.util.Map" parameterType="java.lang.String">
      SELECT
		t.pay_type AS payType,
		t.pay_amount AS payMoney,
		t.pay_index AS payIndex,
		t.user_pay_time AS payClientTime,
		t.order_pay_time AS paidTime
	FROM
		1dcq_xorder_pay t
	WHERE
		t.xorder_id = #{xorderId}	
  </select>
  <!-- 根据订单编号删除支付记录 -->
  <delete id="delXorderPayDtoByOrderId" parameterType="java.lang.String" >
    delete from 1dcq_xorder_pay
    where xorder_id = #{xorderId}
  </delete>
  
  <!-- 新增非会员支付信息 -->
  <insert id="addXorderPayDto" parameterType="com.idcq.appserver.dto.pay.XorderPayDto" >
    insert into 1dcq_xorder_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="xorderPayId != null" >
        xorder_pay_id,
      </if>
      <if test="xorderId != null" >
        xorder_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="orderPayType != null" >
        order_pay_type,
      </if>
      <if test="orderPayTime != null" >
        order_pay_time,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="payeeType != null" >
        payee_type,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="payIndex != null" >
        pay_index,
      </if>
      <if test="userPayTime != null" >
        user_pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="xorderPayId != null" >
        #{xorderPayId,jdbcType=BIGINT},
      </if>
      <if test="xorderId != null" >
        #{xorderId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderPayType != null" >
        #{orderPayType,jdbcType=TINYINT},
      </if>
      <if test="orderPayTime != null" >
        #{orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payeeType != null" >
        #{payeeType,jdbcType=TINYINT},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="payIndex != null" >
        #{payIndex},
      </if>
      <if test="userPayTime != null" >
        #{userPayTime},
      </if>
    </trim>
  </insert>
  
    <!-- 根据订单id和收款人类型获取订单收益信息 -->
  <select id="getAmountByXOrderIdAndPayeeType" parameterType="java.util.Map"  resultType="java.util.Map">
	   SELECT 
			SUM(op.cnt) as totalRevenue,
			MAX(CASE op.payee_type WHEN 0 THEN op.cnt ELSE 0 END)  as onLinePay,
			MAX(CASE op.payee_type WHEN 1 THEN op.cnt ELSE 0 END)  as offLinePay
		FROM 
			(
			select  shop_id,payee_type,sum(pay_amount) as cnt from 1dcq_xorder_pay 
				WHERE xorder_id = #{xOrderId}
			group by payee_type
			) as op 
   </select> 
    <!-- 根据订单id和支付类型获取订单收益信息 -->
  <select id="getAmountByXorderIdAndPayType" parameterType="java.util.Map"  resultType="java.util.Map">
		SELECT 
			MAX(CASE op.pay_type WHEN 6 THEN op.cnt ELSE 0 END)  as cashPay,
			MAX(CASE op.pay_type WHEN 7 THEN op.cnt ELSE 0 END)  as posPay
		FROM 
			(
			select  shop_id,pay_type,sum(pay_amount) as cnt from 1dcq_xorder_pay 
				WHERE xorder_id = #{xOrderId}
			group by pay_type
			) as op 
   </select> 
   
   <select id="queryXorderPayList" parameterType="java.lang.String" resultMap="BaseResultMap">
   		select xorder_id,pay_type from 1dcq_xorder_pay p where p.xorder_id=#{xorderId}
   </select>
   
   <select id="getXorderPayDetail" parameterType="java.util.List" resultType="java.util.Map">
       SELECT
			SUM(t.cashPay) AS cashPay,
			SUM(t.posPay) AS posPay,
			SUM(t.onlinePay) AS onlinePay,
			t.xorder_id AS orderId
		FROM
			(
				SELECT
					o.xorder_id,
					IFNULL(SUM(o.pay_amount), 0) AS cashPay,
					0 AS posPay,
					0 AS onlinePay
				FROM
					1dcq_xorder_pay o
				WHERE
					o.xorder_id in (
					<foreach collection="list" item="xorderId" open="" close="" separator=",">
					    #{xorderId}
					</foreach>
					)
				AND o.pay_type = 6
				GROUP BY o.xorder_id
				UNION ALL
					SELECT
						o.xorder_id,
						0 AS cashPay,
						IFNULL(SUM(o.pay_amount), 0) AS posPay,
						0 AS onlinePay
					FROM
						1dcq_xorder_pay o
					WHERE
						o.xorder_id in (
						<foreach collection="list" item="xorderId" open="" close="" separator=",">
						    #{xorderId}
						</foreach>
						)
					AND o.pay_type = 7
					GROUP BY o.xorder_id
					UNION ALL
						SELECT
							o.xorder_id,
							0 AS cashPay,
							0 AS posPay,
							IFNULL(SUM(o.pay_amount), 0) AS onlinePay
						FROM
							1dcq_xorder_pay o
						WHERE
							o.xorder_id in (
							<foreach collection="list" item="xorderId" open="" close="" separator=",">
							    #{xorderId}
							</foreach>
							)
						AND o.pay_type NOT IN (6, 7)
						GROUP BY o.xorder_id
			) t
		 GROUP BY t.xorder_id
   </select>
   
   <select id="getXorderPayList" parameterType="java.lang.String" resultType="java.util.Map">
   	select 
   		pay_type as payType,
   		pay_amount as payAmount,
   		order_pay_time as pay_time
   	 from 1dcq_xorder_pay x
   	 where x.xorder_id=#{xorderId}
   </select>
</mapper>