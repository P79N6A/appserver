<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idcq.appserver.dto.shop.ShopDto">
	<resultMap id="BaseResultMap" type="com.idcq.appserver.dto.shop.ShopDto">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Mar 10 
			18:07:54 CST 2015. -->
		<id column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="shop_status" property="shopStatus" jdbcType="TINYINT" />
		<result column="shop_name" property="shopName" jdbcType="VARCHAR" />
		<result column="shop_type" property="shopType" jdbcType="INTEGER" />
		<result column="principal_id" property="principalId" jdbcType="BIGINT" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="principal_name" property="principalName"
			jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="longitude" property="longitude" jdbcType="DECIMAL" />
		<result column="latitude" property="latitude" jdbcType="DECIMAL" />
		<result column="business_license" property="businessLicense"
			jdbcType="VARCHAR" />
		<result column="business_license_pic" property="businessLicensePic"
			jdbcType="INTEGER" />
		<result column="refer_user_id" property="referUserId" jdbcType="BIGINT" />
		<result column="refer_user_type" property="referUserType"
			jdbcType="TINYINT" />
		<result column="start_btime" property="startBTime" jdbcType="TIMESTAMP" />
		<result column="stop_btime" property="stopBTime" jdbcType="TIMESTAMP" />
		<result column="member_discount" property="memberDiscount"
			jdbcType="DOUBLE" />
		<result column="platform_discount" property="platformDiscount"
			jdbcType="DOUBLE" />
		<result column="audit_status" property="auditStatus" jdbcType="BIT" />
		<result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="audit_user_id" property="auditUserId" jdbcType="BIGINT" />
		<result column="star_level_grade" property="starLevelGrade"
			jdbcType="DOUBLE" />
		<result column="env_grade" property="envGrade" jdbcType="DOUBLE" />
		<result column="service_grade" property="serviceGrade"
			jdbcType="DOUBLE" />
		<result column="logistics_grade" property="logisticsGrade"
			jdbcType="DOUBLE" />
		<result column="deposit" property="deposit" jdbcType="DOUBLE" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="withdraw_password" property="withdrawPassword"
			jdbcType="VARCHAR" />
		<result column="is_principal_pwd" property="isPrincipalPwd"
			jdbcType="BIT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_update_time" property="lastUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="province_id" property="provinceId" jdbcType="INTEGER" />
		<result column="city_id" property="cityId" jdbcType="INTEGER" />
		<result column="district_id" property="districtId" jdbcType="INTEGER" />
		<result column="column_id" property="columnId" jdbcType="INTEGER" />
		<result column="sold_number" property="soldNumber" jdbcType="INTEGER" />
		<!-- 追加 20150324 -->
		<result column="shopLogoUrl" property="shopLogoUrl" />
		<result column="shop_desc" property="shopDesc" />
		<result column="shop_infrastructure" property="shopInfrastructure" />
		<result column="town_id" property="townId" />
		<result column="shop_logo_id" property="shopLogoId" />
		<result column="zan_number" property="zanNumber" />
		<result column="shop_serve_user_id" property="shopServerUserId" />
		<result column="percentage" property="percentage" />
		<result column="is_book" property="isBook" />
		<result column="red_packet_flag" property="redPacketFlag" />
		<result column="full_sent_flag" property="fullSentFlag" />
		<result column="coupon_flag" property="couponFlag" />
		<result column="cash_coupon_flag" property="cashCouponFlag" />
		<result column="timed_discount_flag" property="timedDiscountFlag" />
		<result column="takeout_flag" property="takeoutFlag" />
		<result column="book_flag" property="bookFlag" />
		<result column="shop_mode" property="shopMode" />
		<!-- 追加 20150324 -->
		<result column="confirm_minute" property="confirmMinute" />
		<result column="server_mode" property="serverMode" />
		<result column="shop_hours" property="shopHours" />
		<result column="least_book_price" property="leastBookPrice" />
		<result column="is_home_service" property="isHomeService" />
		<result column="settle_type" property="settleType" />
		<result column="order_settle_type" property="orderSettleType" />
		<result column="refer_shop_id" property="referShopId" />
		<result column="is_sign" property="sign" />
		<result column="business_license_pic" property="businessLicenceId" />
		<result column="business_license" property="businessLicenceNo" />
		<result column="shop_key" property="shopKey" />
		<!-- 追加 20150315 -->
		<result column="business_area_activity_flag" property="businessAreaActivityFlag" />
		 <!-- 追加20160505 -->
	    <result column="organization_code" property="organizationCode"/>
	    <result column="organization_code_pic" property="organizationCodePicId"/>
	    <result column="tax_registration_certificate" property="taxRegistrationCertificate"/>
	    <result column="tax_registration_certificate_pic" property="taxRegistrationCertificatePicId"/>
	    <result column="shop_classify" property="shopClassify"/>
	    <result column="authorization_pic" property="authorizationPicId"/>
	    <result column="principal_identity_card_no" property="principalIdentityCardNo"/>
	    <result column="principal_identity_card_pic1" property="principalIdentityCardPicId1"/>
	    <result column="principal_identity_card_pic2" property="principalIdentityCardPicId2"/>
	    <result column="is_3in1" property="is3In1"/>
	    <result column="business_certificate" property="businessCertificates"/>
	    <result column="business_certificate_pic" property="businessCertificatePicIds"/>
	    <!-- 追加20160524 -->
	    <result column="shop_point" property="shopPoint"/>
		<result column="level_id" property="levelId" />
		<result column="level_name" property="levelName"/>
		<result column="is_recommend" property="isRecommend"/>
		<!-- 追加20160530 -->
		<result column="shop_manager_name" property="shopManagerName"/>
		<result column="shop_manager_identity_card_no" property="shopManagerIdentityCardNo"/>
		<result column="shop_manager_identity_card_pic1" property="shopManagerIdentityCardPic1"/>
		<result column="shop_manager_identity_card_pic2" property="shopManagerIdentityCardPic2"/>
		
		<result column="business_license_valid_from" property="businessLicenseValidFrom" />
		<result column="business_license_valid_to" property="businessLicenseValidTo" />
		<result column="business_certificate_valid_to" property="businessCertificateValidTo" />
		<result column="shop_manager_is_corporate" property="shopManagerIsCorporate"/>
        <result column="chain_stores_type" property="chainStoresType" />
       <result column="head_shop_id" property="headShopId" />
       <result column="recommend_reason" property="recommendReason" />
		<result column="shop_identity" property="shopIdentity" jdbcType="INTEGER" />
		<result column="buy_v_money" property="buyvMoney"/>
		<result column="buy_v_type" property="buyvType"/>
	</resultMap>

	<!-- 连锁店列表 -->
    <resultMap id="headShopResultMap" type="com.idcq.appserver.dto.shop.ShopDto">
		<id column="shop_id" property="shopId"  />
		<result column="shop_status" property="shopStatus" />
		<result column="shop_name" property="shopName"/>
        <result column="chain_stores_type" property="chainStoresType" />
        <result column="head_shop_id" property="headShopId" />
	</resultMap>

	<resultMap type="com.idcq.appserver.dto.backup.ShopDto2" id="shopMap">
		<result column="shop_id" property="shopId" />
		<result column="shop_status" property="shopStatus" />
		<result column="shop_name" property="shopName" />
		<result column="shop_desc" property="shopDesc" />
		<result column="shop_type" property="shopType" />
		<result column="principal_id" property="principalId" />
		<result column="telephone" property="telephone" />
		<result column="principal_name" property="principalName" />
		<result column="address" property="address" />
		<result column="longitude" property="longitude" />
		<result column="latitude" property="latitude" />
		<result column="business_license" property="businLicense" />
		<result column="business_license_pic" property="businLicensePic" />
		<result column="refer_user_id" property="referUserId" />
		<result column="refer_user_type" property="referUserType" />
		<result column="start_btime" property="startBtime" jdbcType="TIMESTAMP" />
		<result column="stop_btime" property="stopBtime" jdbcType="TIMESTAMP" />
		<!-- <result column="big_logo" property="bigLogo"/> <result column="small_logo" 
			property="smallLogo"/> -->
		<result column="member_discount" property="memberDiscount" />
		<result column="platform_discount" property="platformDiscount" />
		<result column="audit_status" property="auditStatus" />
		<result column="audit_time" property="auditTime" />
		<result column="audit_user_id" property="auditUserId" />
		<result column="star_level_grade" property="starLevelGrade" />
		<result column="env_grade" property="envGrade" />
		<result column="service_grade" property="serviceGrade" />
		<result column="deposit" property="deposit" />
		<result column="email" property="email" />
		<result column="withdraw_password" property="withdrawPwd" />
		<result column="is_principal_pwd" property="isPrincipalPwd" />
		<result column="create_time" property="createTime" />
		<result column="last_update_time" property="lastUpdateTime" />
		<result column="province_id" property="provinceId" jdbcType="INTEGER" />
		<result column="city_id" property="cityId" jdbcType="INTEGER" />
		<result column="district_id" property="districtId" jdbcType="INTEGER" />
		<result column="column_id" property="columnId" jdbcType="INTEGER" />
		<result column="sold_number" property="soldNumber" jdbcType="INTEGER" />
		<result column="server_mode" property="serverMode" />
		<result column="shop_hours" property="shopHours" />
		
		<result column="buy_v_money" property="buyvMoney" />
		<result column="buy_v_type" property="buyvType" />
		<result column="shop_identity" property="shopIdentity" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.idcq.appserver.dto.shop.ShopDto"
		extends="BaseResultMap">
		<result column="shop_desc" property="shopDesc" jdbcType="LONGVARCHAR" />
	</resultMap>
	<!-- 20160504添加连锁信息 -->
	<resultMap id="ResultMapWithSettleInfos" type="com.idcq.appserver.dto.shop.ShopDto"
		extends="ResultMapWithBLOBs">
		<result column="integration_promotion_user_id" property="integrationPromotionUserId"
			jdbcType="INTEGER" />
		<result column="integration_promotion_ratio" property="integrationPromotionRatio"
			jdbcType="DECIMAL" />
		<result column="integration_facilitate_user_id" property="integrationFacilitateUserId"
			jdbcType="INTEGER" />
		<result column="integration_facilitate_ratio" property="integrationFacilitateRatio"
			jdbcType="DECIMAL" />
		<result column="integration_principal_user_id" property="integrationPrincipalUserId"
			jdbcType="LONGVARCHAR" />
		<result column="integration_principal_ratio" property="integrationPrincipalRatio"
			jdbcType="DECIMAL" />
		<result column="shop_manager_name" property="shopManagerName" />
		<result column="shop_manager_identity_card_no" property="shopManagerIdentityCardNo" />
	</resultMap>

	<resultMap id="searchShopMap" type="com.idcq.appserver.dto.shop.ShopDto"
		extends="BaseResultMap">
		<result column="red_packet" property="redPacket" jdbcType="INTEGER" />
		<result column="full_sent" property="fullSent" jdbcType="INTEGER" />
		<result column="coupon" property="coupon" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="shopRefMemberMap" type="com.idcq.appserver.dto.user.ShopRefMemberDto">
		<result column="termSum" property="termSum" jdbcType="INTEGER" />
		<result column="totalSum" property="totalSum" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="shopEmployeeMap" type="com.idcq.appserver.dto.shop.ShopEmployeeDto">
		 <result column="employee_id" property="employeeId"/>
 		 <result column="shop_id" property="shopId"/>
 		 <result column="status" property="status"/>
		 <result column="username" property="userName"/>
		 <result column="password" property="password"/>
		 <result column="employee_no" property="employeeCode"/>
		 <result column="skill" property="skill"/>
		 <result column="sex" property="sex"/>
		 <result column="is_check" property="isCheck"/>
		 <result column="mobile" property="mobile"/>
		 <result column="user_id" property="userId"/>
	</resultMap>
	
	<sql id="Base_Column_List">
		shop_id, shop_status, shop_name, shop_type, principal_id, telephone,
		principal_name,
		address, longitude, latitude, business_license, business_license_pic,
		refer_user_id, refer_user_type, start_btime,
		stop_btime,ifnull(member_discount,0) member_discount,
		ifnull(platform_discount,0) platform_discount, audit_status,
		audit_time, audit_user_id, star_level_grade, env_grade,
		service_grade, deposit, email, withdraw_password, is_principal_pwd, create_time,
		last_update_time,province_id,city_id,district_id,column_id,sold_number,
		shop_desc, shop_infrastructure, shop_infrastructure, town_id
		,shop_logo_id, zan_number, shop_serve_user_id,
		percentage ,is_book, is_sign
	</sql>

	<sql id="Main_Column_List">
		shop_id, shop_status, shop_name, shop_type, principal_id, telephone,
		principal_name,
		address, longitude, latitude, business_license, business_license_pic,
		refer_user_id, refer_user_type, start_btime, stop_btime,
		ifnull(member_discount,0) member_discount,
		ifnull(platform_discount,0) platform_discount, audit_status, audit_time, audit_user_id,
		star_level_grade, env_grade,
		service_grade, deposit, email, withdraw_password, is_principal_pwd, create_time,
		last_update_time,province_id,city_id,district_id,column_id,sold_number,
		shop_desc, shop_infrastructure, shop_infrastructure, town_id
		,shop_logo_id, zan_number, shop_serve_user_id,
		percentage ,takeout_flag,book_flag,confirm_minute,is_home_service, is_sign,
		shop_identity,buy_v_money,buy_v_type
	</sql>

	<!-- 商铺表全表字段 -->
	<sql id="full_Column_List">
		shop_id, shop_status, shop_name, shop_type, principal_id, telephone,
		principal_name,
		address, longitude, latitude, business_license, business_license_pic,
		refer_user_id, refer_user_type, start_btime, stop_btime,
		ifnull(member_discount,0) member_discount,
		ifnull(platform_discount,0) platform_discount, audit_status, audit_time, audit_user_id,
		star_level_grade, env_grade,
		service_grade, deposit, email, withdraw_password, is_principal_pwd, create_time,
		last_update_time,province_id,city_id,district_id,column_id,sold_number,
		shop_desc, shop_infrastructure, shop_infrastructure, town_id
		,shop_logo_id, zan_number, shop_serve_user_id,
		percentage ,takeout_flag,book_flag,confirm_minute,is_home_service,
		shop_mode,settle_type,order_settle_type,refer_shop_id,is_sign,
		integration_promotion_ratio,integration_promotion_user_id,integration_facilitate_ratio,integration_facilitate_user_id,integration_principal_ratio,
		integration_principal_user_id,
		shop_point,
		level_id,
		is_recommend,
		shop_manager_name,
		shop_manager_identity_card_no,
		shop_manager_is_corporate,
		chain_stores_type,
		head_shop_id,
	    shop_identity,
	    buy_v_money,
	    buy_v_type
	</sql>

	<sql id="detail_Column_List">
		t1.shop_name as shop_name,
		t1.shop_id as shop_id,
		t1.telephone as telephone,
		t1.address as address,
		t1.longitude as longitude,
		t1.latitude as latitude,
		t1.start_btime as start_btime,
		t1.stop_btime as stop_btime,
		t1.star_level_grade as star_level_grade,
		t1.env_grade as env_grade,
		t1.shop_logo_id,
		t1.service_grade as service_grade,
		t1.shop_status as shop_status,
		t1.shop_infrastructure as shop_infrastructure,
		t1.sold_number as sold_number,
		ifnull(t1.member_discount,0) as member_discount,
		ifnull(t1.platform_discount,0) as platform_discount,
		t1.takeout_flag as takeout_flag,
		t1.book_flag as book_flag,
		t1.shop_mode as shop_mode,
		t3.timed_discount_flag as timed_discount_flag,
		t3.cash_coupon_flag as cash_coupon_flag,
		t3.coupon_flag as coupon_flag,
		t3.red_packet_flag as red_packet_flag,
		t3.business_area_activity_flag,
		t1.member_discount as member_discount,
		t1.province_id,
		t1.city_id,
		t1.principal_id,
		t1.principal_name,
		t1.district_id,
		t1.town_id,
		t1.shop_serve_user_id,
		t1.refer_user_id,
		t1.refer_user_type,
		t1.shop_hours,
		t1.server_mode,
		t1.column_id,
		t4.least_book_price,
		t1.is_home_service,
		t1.shop_desc,
		t1.order_settle_type,
		t1.shop_desc,
		t1.is_sign,
		t1.business_license,
		t1.business_license_pic,
		t1.integration_promotion_ratio,
		t1.integration_promotion_user_id,
		t1.integration_facilitate_ratio,
		t1.integration_facilitate_user_id,
		t1.integration_principal_ratio,
		t1.integration_principal_user_id,
		t1.shop_identity,
	    t1.buy_v_money,
	    t1.buy_v_type
	</sql>

	<sql id="Blob_Column_List">
		shop_desc
	</sql>
	<sql id="Search_Column_List">
		0 red_packet,0 full_sent,0 coupon
	</sql>
	<select id="getTakeoutFlag" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select takeout_flag from 1dcq_shop where shop_id = #{shopId} and shop_status
		= 0
	</select>
	<select id="getIsHomeService" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select is_home_service from 1dcq_shop where shop_id = #{shopId} and
		shop_status = 0
	</select>
	<select id="getBookFlag" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select book_flag from 1dcq_shop where shop_id = #{shopId} and shop_status =
		0
	</select>
	<select id="getShopConfirmMinute" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select confirm_minute from 1dcq_shop where shop_id = #{shopId} and
		shop_status = 0
	</select>
	<update id="statisShopSoldExecute" parameterType="java.util.Map">
		{call sp_shop_soldnum_statis (#{startTime,mode=IN},#{endTime,mode=IN})}
	</update>

	<update id="incrShopSoldNum" parameterType="java.util.Map">
		update 1dcq_shop set sold_number = (ifnull(sold_number,0)+#{soldNum}) where
		shop_id = #{shopId} and shop_status = 0
	</update>
	<select id="getShopMarketing" parameterType="java.lang.Long"
		resultType="java.util.Map">
		select
		red_packet_flag,full_sent_flag,coupon_flag,timed_discount_flag,cash_coupon_flag
		from 1dcq_shop_marketing where shop_id = #{shopId}
	</select>

	<!-- 根据商铺编号查询商铺名称 -->
	<select id="getShopNameById" resultType="java.lang.String"
		parameterType="java.lang.Long">
		SELECT
		shop_name
		FROM
		1dcq_shop s
		WHERE
		s.shop_id = #{shopId} limit 1
	</select>
	<select id="queryShopEmplExists" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(1) from 1dcq_shop_employee where shop_id = #{shopId} and
		employee_id = #{employeeId} and status = 1
	</select>

	<select id="getMemberDiscount" parameterType="java.lang.Long"
		resultType="java.lang.Double">
		select ifnull(member_discount,0) member_discount from 1dcq_shop where
		shop_id = #{shopId} and shop_status = 0
	</select>

	<select id="queryShopExists" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		select count(1) from 1dcq_shop where shop_id = #{shopId} and shop_status = 0
	</select>
	<!-- 查询商铺信息，如果存在，则将状态返回 -->
	<select id="queryShopStatus" parameterType="java.lang.Long"
		resultType="java.util.Map">
		select t.shop_id,t.shop_status from 1dcq_shop t where t.shop_id = #{shopId}
	</select>
	<select id="getShopById" resultMap="ResultMapWithSettleInfos"
		parameterType="java.lang.Long">
		select
		<include refid="detail_Column_List" />
		from 1dcq_shop t1
		left join 1dcq_shop_marketing t3
		on t1.shop_id = t3.shop_id left join 1dcq_distribution_takeout_setting
		t4 on t1.shop_id=t4.shop_id and t4.setting_type=1
		where t1.shop_id = #{shopId}
	</select>
	<!-- 查询正常商铺信息 -->
	<select id="getShopExtendByIdAndStatus" resultMap="ResultMapWithBLOBs"
		parameterType="java.util.Map">
		select
		<include refid="detail_Column_List" />
		,t5.column_name as shopIndustryName,t1.audit_status as audit_status,
		organization_code, organization_code_pic, tax_registration_certificate, tax_registration_certificate_pic,
   		shop_classify,authorization_pic,principal_identity_card_no,principal_identity_card_pic1,principal_identity_card_pic2,
   		t1.is_3in1,t1.percentage,business_certificate_pic,business_certificate,t1.shop_point,t1.level_id,l.level_name,
   		t1.shop_manager_name,t1.shop_manager_identity_card_no,t1.shop_manager_identity_card_pic1,
   		t1.shop_manager_identity_card_pic2,business_license_valid_from,business_license_valid_to,business_certificate_valid_to,
   		t1.shop_manager_is_corporate,TRUNCATE(t1.buy_v_money,2) AS buy_v_money,t1.shop_identity, t1.buy_v_type
		from 1dcq_shop t1
		left join 1dcq_shop_marketing t3 on t1.shop_id = t3.shop_id
		left join 1dcq_distribution_takeout_setting t4 on t1.shop_id=t4.shop_id
		and t4.setting_type=1
		left join 1dcq_column t5 on t1.column_id=t5.column_id
		left join 1dcq_level l on l.level_id = t1.level_id
		where t1.shop_id = #{shopId}
		<if test="shopStatus != null">
			and t1.shop_status = #{shopStatus}
		</if>
	</select>
	<select id="getShopPasswordById" resultType="java.lang.String"
		parameterType="java.lang.Long">
		select
		pay_password
		from
		1dcq_shop t1
		where
		t1.shop_id = #{shopId}
		limit 1
	</select>
	<!-- 查询会员是否是店铺服务人员 -->
	<select id="queryUserIsShopServer" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT
		COUNT(*)
		FROM
		1dcq_shop s
		WHERE
		s.shop_serve_user_id = #{userId}
	</select>
	
	<select id="getShopCountByMap" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		select count(*)
		from 1dcq_shop t1
		where t1.shop_id = #{shopId}
		<if test="shopStatus != null">
			and t1.shop_status = #{shopStatus}
		</if>
	</select>
	<!-- 查询商品表单表数据 -->
	<select id="getById" resultMap="ResultMapWithSettleInfos"
		parameterType="java.lang.Long">
		select
		<include refid="full_Column_List" />
		from 1dcq_shop
		where shop_id = #{primaryKeyId}
	</select>

	<select id="getShopByPrincipalId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Main_Column_List" />
		from 1dcq_shop
		where principal_id = #{principalId} order by shop_status limit 1
	</select>
	<select id="getIdListByPrincipalId" resultType="java.lang.Long" parameterType="java.lang.Long">
		select
			shop_id
		from 1dcq_shop
		where principal_id = #{principalId} 
	</select>
	
	<select id="getShopList" resultMap="ResultMapWithBLOBs"
		parameterType="java.util.Map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Mar 10 
			18:07:54 CST 2015. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from 1dcq_shop
		<if test="shop.shopId != null and shop.shopId > 0">
			where shop_id = #{shop.shopId}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 商圈活动：查询商圈活动可以参与商铺列表总数 -->
	<select id="getShopListByParamsCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*) AS num
		FROM
		1dcq_shop t
		WHERE
		t.city_id = #{cityId}
		AND t.shop_id &lt;&gt; #{shopId}
	</select>
	<select id="getShopListByParams" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		t.shop_id,
		t.principal_id,
		t.shop_mode,
		t.shop_name
		FROM
		1dcq_shop t
		WHERE
		t.city_id = #{cityId}
		AND t.shop_id &lt;&gt; #{shopId}
		LIMIT #{pNo},#{pSize}
	</select>
	<select id="searchShop" resultMap="shopMap" parameterType="java.util.Map">
		select shop_id, shop_status, shop_name, shop_type, principal_id,
		telephone, principal_name,
		address, longitude, latitude, business_license, business_license_pic,
		refer_user_id, refer_user_type, start_btime, stop_btime,
		member_discount,
		platform_discount, audit_status, audit_time, audit_user_id, star_level_grade, env_grade,
		service_grade, deposit, email, withdraw_password, is_principal_pwd,
		create_time,
		last_update_time,province_id,city_id,district_id,column_id,sold_number
		,0 red_packet,0 full_sent,0 coupon
		from 1dcq_shop
		where 1=1
		<if test="columnId != null and columnId > 0">
			and column_id = #{columnId}
		</if>
		<if test="cityId != null">
			and city_id = #{cityId}
		</if>
		<if test="districtId != null">
			and district_id = #{districtId}
		</if>
		<if test="longitude != null">
			and longitude BETWEEN #{longitude} AND #{maxLongitude}
		</if>
		<if test="latitude != null">
			and latitude BETWEEN #{latitude} AND #{maxLatitude}
		</if>
		<if test="searchKey != null">
			and shop_name like concat('%',#{searchKey},'%')
		</if>
		<if test="orderBy == 0">
			order by star_level_grade desc
		</if>
		<if test="orderBy == 1">
			order by star_level_grade desc
		</if>
		<if test="orderBy == 2">
			order by sold_number desc
		</if>
		limit #{n},#{m}
	</select>

	<select id="searchShopTotal" parameterType="java.util.Map"
		resultType="int">
		select count(1) from 1dcq_shop
		where 1=1
		<if test="columnId != null and columnId > 0">
			and column_id = #{columnId}
		</if>
		<if test="cityId != null">
			and city_id = #{cityId}
		</if>
		<if test="districtId != null">
			and district_id = #{districtId}
		</if>
		<if test="longitude != null">
			and longitude BETWEEN #{longitude} AND #{maxLongitude}
		</if>
		<if test="latitude != null">
			and latitude BETWEEN #{latitude} AND #{maxLatitude}
		</if>
		<if test="searchKey != null">
			and shop_name like concat('%',#{searchKey},'%')
		</if>
	</select>

	<select id="getShopLogoUrl" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select file_url from 1dcq_attachment where attachement_id = #{logoId}
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Mar 10 
			18:07:54 CST 2015. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from 1dcq_shop
		where shop_id = #{shopId,jdbcType=INTEGER}
	</select>

	<!-- 获取指定商铺经纬度信息 -->
	<select id="getShopXyById" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select shop_id,longitude,latitude from 1dcq_shop
		where shop_id = #{shopId}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Mar 10 
			18:07:54 CST 2015. -->
		delete from 1dcq_shop
		where shop_id = #{shopId,jdbcType=INTEGER}
	</delete>

	<!-- 新增商铺 -->
	<insert id="insertShop" useGeneratedKeys="true" keyProperty="shopId"
		parameterType="com.idcq.appserver.dto.shop.ShopDto">
		insert into 1dcq_shop
		(
		shop_status,
		server_mode,
		shop_name,
		shop_type,
		principal_id,
		telephone,
		principal_name,
		province_id,
		city_id,
		district_id,
		town_id,
		address,
		column_id,
		member_discount,
		platform_discount,
		audit_status,
		create_time,
		last_update_time,
		takeout_flag,
		book_flag,
		confirm_minute,
		is_maling,
		is_home_service,
		settle_type,
		order_settle_type,
		contract_valid_from,
		contract_valid_to,
		is_sign,
		business_license,
		longitude,
		latitude,
		business_license_pic,
		refer_user_id,
		refer_user_type,
		shop_classify,
	    organization_code,
	    organization_code_pic,
	    tax_registration_certificate,
	    tax_registration_certificate_pic,
		authorization_pic,
		principal_identity_card_no,
		principal_identity_card_pic1,
		principal_identity_card_pic2,
		percentage,
		shop_logo_id,
		is_3in1,
		business_certificate,
		business_certificate_pic,
		shop_mode,
		shop_manager_name,
		shop_manager_identity_card_no,
		shop_manager_identity_card_pic1,
		shop_manager_identity_card_pic2,
		shop_serve_user_id,
		business_license_valid_from,
		business_license_valid_to,
		business_certificate_valid_to,
		shop_manager_is_corporate
		)
		values
		(
		#{shopStatus},
		#{serverMode},
		trim(#{shopName}),
		#{shopType},
		#{principalId},
		#{telephone},
		#{principalName},
		#{provinceId},
		#{cityId},
		#{districtId},
		#{townId},
		#{address},
		#{columnId},
		#{memberDiscount},
		#{memberDiscount},
		#{auditStatus},
		now(),
		now(),
		#{takeoutFlag},
		#{bookFlag},
		#{confirmMinute},
		#{malling},
		#{isHomeService},
		#{settleType},
		#{orderSettleType},
		#{contractValidFrom},
		#{contractValidTo},
		#{sign},
		#{businessLicenceNo},
		#{longitude},
		#{latitude},
		#{businessLicenceId},
		#{referUserId},
		#{referUserType},
	    #{shopClassify},
	    #{organizationCode},
	    #{organizationCodePicId},
	    #{taxRegistrationCertificate},
	    #{taxRegistrationCertificatePicId},
	    #{authorizationPicId},
	    #{principalIdentityCardNo},
	    #{principalIdentityCardPicId1},
	    #{principalIdentityCardPicId2},
	    #{percentage},
	    #{shopLogoId},
	    #{is3In1},
	    #{businessCertificates},
	    #{businessCertificatePicIds},
	    #{shopMode},
	    #{shopManagerName},
	    #{shopManagerIdentityCardNo},
	    #{shopManagerIdentityCardPic1},
	    #{shopManagerIdentityCardPic2},
	    #{shopServerUserId},
	    #{businessLicenseValidFrom},
	    #{businessLicenseValidTo},
	    #{businessCertificateValidTo},
	    #{shopManagerIsCorporate}
		)
	</insert>

	<!-- 新增商铺账户 -->
	<insert id="insertShopAccout" parameterType="java.util.Map">
		insert into 1dcq_shop_account
		(
		shop_id,
		amount,
		account_status,
		create_time
		)
		values
		(
		#{shopId},
		#{amount},
		#{accountStatus},
		now()
		)
	</insert>

	<!-- 修改商铺 -->
	<update id="updateShop" parameterType="com.idcq.idianmgr.dto.shop.ShopBean">
		update 1dcq_shop set
		<if test="shopName != null">
			shop_name = trim(#{shopName}),
		</if>
		<if test="shopHours != null">
			shop_hours = #{shopHours},
		</if>
		<if test="telephone != null">
			telephone = #{telephone},
		</if>
		<if test="provinceId != null">
			province_id = #{provinceId},
		</if>
		<if test="cityId != null">
			city_id = #{cityId},
		</if>
		<if test="districtId != null">
			district_id = #{districtId},
		</if>
		<if test="townId != null">
			town_id = #{townId},
		</if>
		<if test="address != null">
			address = #{address},
		</if>
		<if test="shopDesc != null">
			shop_desc = #{shopDesc},
		</if>
		<if test="businessLicenceId != null">
			business_license_pic = #{businessLicenceId},
		</if>
		<if test="businessLicenceNo != null">
			business_license = #{businessLicenceNo},
		</if>
		<if test="auditStatus != null">
			audit_status = #{auditStatus},
		</if>
		<if test="longitude != null">
			longitude = #{longitude},
		</if>
		<if test="latitude != null">
			latitude = #{latitude},
		</if>
		<if test="shopkeeper != null">
			shop_manager_name = #{shopkeeper},
		</if>
		<if test="columnId != null">
			column_id = #{columnId},
		</if>
		<if test="memberDiscount != null">
			member_discount = #{memberDiscount},
		</if>
		<if test="referUserId != null">
			refer_user_id = #{referUserId},
		</if>
		<if test="latitude != null">
			refer_user_type = #{referUserType},
		</if>
		<if test="shopClassify != null" >
	       shop_classify = #{shopClassify},
	     </if>
	     <if test="organizationCode != null" >
	       organization_code = #{organizationCode},
	     </if>
	     <if test="organizationCodePicId != null" >
	       organization_code_pic = #{organizationCodePicId},
	     </if>
	     <if test="taxRegistrationCertificate != null" >
	       tax_registration_certificate = #{taxRegistrationCertificate},
	     </if>
	     <if test="taxRegistrationCertificatePicId != null" >
	       tax_registration_certificate_pic = #{taxRegistrationCertificatePicId},
	     </if>
	     <if test="authorizationPicId != null" >
	       authorization_pic = #{authorizationPicId},
	     </if>
	     <if test="principalIdentityCardNo != null" >
	       principal_identity_card_no = #{principalIdentityCardNo},
	     </if>
	     <if test="principalIdentityCardPicId1 != null" >
	       principal_identity_card_pic1 = #{principalIdentityCardPicId1},
	     </if>
	     <if test="principalIdentityCardPicId2 != null" >
	       principal_identity_card_pic2 = #{principalIdentityCardPicId2},
	     </if>
	     <if test="is3In1 != null" >
	       is_3in1 = #{is3In1},
	     </if>
	      <if test="percentage != null" >
	       percentage = #{percentage},
	     </if>
	     <if test="shopLogoId != null">
	     	shop_logo_id = #{shopLogoId},
	     </if>
	     <if test="businessCertificates != null">
	     	business_certificate = #{businessCertificates},
	     </if>
	     <if test="businessCertificatePicIds != null">
	     	business_certificate_pic = #{businessCertificatePicIds},
	     </if>
	       <if test="identityCardNo != null">
	     	shop_manager_identity_card_no = #{identityCardNo},
	     </if>
	       <if test="shopManagerIdentityCardPic1 != null">
	     	shop_manager_identity_card_pic1 = #{shopManagerIdentityCardPic1},
	     </if>
	     <if test="shopManagerIdentityCardPic2 != null">
	     	shop_manager_identity_card_pic2 = #{shopManagerIdentityCardPic2},
	     </if>
	     <if test="isRecommend != null">
	     	is_recommend = #{isRecommend},
	     </if>
	     <if test="shopServerUserId != null ">
	     	shop_serve_user_id=#{shopServerUserId},
	     </if>
	    <if test="businessLicenseValidFrom != null ">
	     	business_license_valid_from =#{businessLicenseValidFrom},
	     </if>
	      <if test="businessLicenseValidTo != null ">
	     	business_license_valid_to = #{businessLicenseValidTo},
	     </if> 
	      <if test="businessCertificateValidTo != null ">
	     	business_certificate_valid_to = #{businessCertificateValidTo},
	     </if>
	     <if test="shopManagerIsCorporate != null">
	     	shop_manager_is_corporate =  #{shopManagerIsCorporate},
	     </if>
	     <if test="buyvMoney != null">
	     	buy_v_money =  #{buyvMoney},
	     </if>
	     <if test="buyvType != null">
	     	buy_v_type =  #{buyvType},
	     </if>
	      <if test="shopIdentity != null">
	     	shop_identity =  #{shopIdentity},
	     </if>
	     <if test="lastChangeIdentityDate != null">
	     	last_change_identity_date =  #{lastChangeIdentityDate},
	     </if>	 	  
			last_update_time = now() 
		  where shop_id = #{shopId}
	</update>

	<update id="updateShopPoint" parameterType="com.idcq.idianmgr.dto.shop.ShopBean">
		update 1dcq_shop set
		<if test="levelId != null">
	     	level_id = #{levelId},
	    </if>
	    <if test="shopPoint != null">
	     	shop_point = shop_point + #{shopPoint},
	    </if>
			last_update_time = now() 
		where shop_id = #{shopId}
	</update>
	<!-- 根据goodId查询商品数量 -->
	<select id="getCountByShopId" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select
		count(*)
		from
		1dcq_shop s
		where
		s.shop_id = #{shopId,jdbcType=INTEGER}
	</select>

	<select id="getShopPoint" resultType="java.lang.Integer" parameterType="java.lang.Long">
		select
			shop_point
		from
		1dcq_shop s
		where
		s.shop_id = #{shopId,jdbcType=INTEGER}
	</select>
	
	<select id="getShopsByShopIdList" resultMap="BaseResultMap">
		select
		<include refid="base_column_for_search" />
		from 1dcq_shop sh Left join 1dcq_shop_marketing market on
		sh.shop_id=market.shop_id
		where sh.shop_id in
		<foreach collection="list" item="item" open="(" separator=","
			close=")">
			#{item}
		</foreach>
	</select>

	<sql id="base_column_for_search">
		sh.*,
		market.red_packet_flag,
		market.full_sent_flag,
		market.coupon_flag,
		market.cash_coupon_flag,
		market.timed_discount_flag,
		market.business_area_activity_flag
	</sql>

	<select id="getShopsByPage" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="base_column_for_search" />
		from 1dcq_shop sh left join 1dcq_shop_marketing market on
		sh.shop_id=market.shop_id
		limit #{start},#{limit}
	</select>

	<select id="getTotalCount" resultType="java.lang.Integer"
		parameterType="com.idcq.appserver.dto.common.PageModel">
		select count(*) from 1dcq_shop
	</select>

	<update id="updateShopZan" parameterType="java.lang.Long">
		update 1dcq_shop set zan_number = zan_number + 1 where shop_id =
		#{shopId,jdbcType=INTEGER}
	</update>

	<!-- 修改商铺支付密码 -->
	<update id="updateShopPayPwd" parameterType="java.util.Map">
		update 1dcq_shop set pay_password = #{payPwd} where shop_id = #{shopId}
	</update>
	<select id="getShopZanById" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select zan_number from 1dcq_shop where shop_id = #{shopId,jdbcType=INTEGER}
	</select>

	<select id="getUserIdByShopId" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		select principal_id from 1dcq_shop sp where sp.shop_id=#{shopId
		,jdbcType=INTEGER}
	</select>

	<select id="callTemporyIndexProcedure" parameterType="java.util.Map"
		statementType="CALLABLE">
		{call TRIGGER_INDEX_CREATE (#{prevUpdateTime,mode=IN,jdbcType=TIMESTAMP})}
	</select>

	<select id="getShopTotalCount" resultType="java.lang.Long">
		select count(1) from 1dcq_shop
	</select>

	<select id="getShopByPageAndLastUpdateTime" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select sh.*,
		market.red_packet_flag,
		market.full_sent_flag,
		market.coupon_flag,
		market.cash_coupon_flag,
		market.timed_discount_flag,
		market.business_area_activity_flag from 1dcq_shop sh left join 1dcq_shop_marketing market on
		sh.shop_id=market.shop_id where
		sh.last_update_time>=TIMESTAMP(#{lastUpdateTime}) limit
		#{start},#{limit}
	</select>

	<select id="getShopMarketInfoByParam" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="base_column_for_search" />
		from 1dcq_shop sh left join 1dcq_shop_marketing market on
		sh.shop_id=market.shop_id
		where market.last_update_time>=TIMESTAMP(#{lastUpdateTime})
		limit #{start},#{limit}
	</select>

	<select id="getShopEssentialInfo" resultMap="BaseResultMap">
		select * from 1dcq_shop where shop_id=#{shopId}
	</select>

	<select id="getPayPassWordById" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select
		shop_id as shopId,
		pay_password as payPassword
		from 1dcq_shop where shop_id=#{shopId}
	</select>

	<update id="updateShopGrade" parameterType="com.idcq.appserver.dto.shop.ShopDto">
		UPDATE
		1dcq_shop
		SET
		env_grade = #{envGrade},
		service_grade = #{serviceGrade},
		star_level_grade = #{starLevelGrade},
		logistics_grade = #{logisticsGrade}
		WHERE
		shop_id = #{shopId}
	</update>

	<update id="updateShopStatus" parameterType="com.idcq.appserver.dto.shop.ShopDto">
		UPDATE 1dcq_shop
		SET shop_status=#{shopStatus},
		last_update_time = NOW()
		WHERE shop_id = #{shopId}
	</update>

	<select id="getIdList" parameterType="java.util.Map" resultType="java.lang.Long">
		select
		shop_id
		from
		1dcq_shop
		where
		    shop_status = #{shopStatus}
		limit #{limit},#{pSize}
	</select>
	<select id="getBaseShopList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		shop_id as shopId,
		shop_status as shopStatus,
		shop_desc as shopDesc,
		contract_valid_to as contractValidTo
		from
		1dcq_shop
		where
		shop_status = 0
		limit #{minPage},#{maxPage}
	</select>
	<!-- 根据userid查询店铺保证金 -->
	<select id="getDepositByPrincipalId" parameterType="java.lang.Long"
		resultType="java.lang.Double">
		SELECT
		deposit
		FROM
		1dcq_shop sp
		WHERE
		sp.principal_id=#{principalId}
		LIMIT 1
	</select>

	<update id="giveShopDeposit" parameterType="java.util.Map">
		update 1dcq_shop sh set sh.deposit=IFNULL(sh.deposit,0)+#{amount} where
		sh.shop_id=#{shopId}
	</update>
	<select id="getDepositByShopId" parameterType="java.lang.Long"
		resultType="java.lang.Double">
		SELECT
		deposit
		FROM
		1dcq_shop sp
		WHERE
		sp.shop_id=#{shopId}
		LIMIT 1
	</select>
	<!-- 统计订单数：PHP后台用 -->
	<select id="shopOrderCount" statementType="CALLABLE"
		parameterType="java.util.Map" resultMap="orderResultMap">
		{
		call sp_1dcq_index_today_data_stat
		(
		#{shopId,mode=IN,jdbcType=INTEGER},
		#{startTime,mode=IN,jdbcType=DATE},
		#{endTime,mode=IN,jdbcType=DATE},
		#{cashierId,mode=IN,jdbcType=INTEGER}
		)
		}
	</select>
	<resultMap id="orderResultMap" type="java.util.HashMap">
		<result column="totalRevenue" property="totalRevenue" />
		<result column="unbilledNum" property="unbilledNum" />
		<result column="pendingNum" property="pendingNum" />
		<result column="completedNum" property="completedNum" />
		<result column="checkoutNum" property="checkoutNum" />
		<result column="onLinePay" property="onLinePay" />
		<result column="cashPay" property="cashPay" />
		<result column="posPay" property="posPay" />
		<result column="memOrderTotalAmount" property="memOrderTotalAmount" />
		<result column="memOrderTotalRealAmount" property="memOrderTotalRealAmount" />
		<result column="nonMemOrderTotalAmount" property="nonMemOrderTotalAmount" />
		<result column="referMoney" property="referMoney" />
	</resultMap>
	<select id="getOrderAmountCount" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		SUM(op.cnt) as totalRevenue,
		MAX(CASE op.payee_type WHEN 0 THEN op.cnt ELSE 0 END)
		as onLinePay,
		MAX(CASE op.payee_type WHEN 1 THEN op.cnt ELSE 0 END) as
		offLinePay
		FROM
		(
		select shop_id,payee_type,sum(pay_amount) as cnt from 1dcq_order_pay
		where
		shop_id = #{shopId}
		<if test="startTime!=null">
			AND last_update_time>=#{startTime}
		</if>
		<if test="endTime!=null">
			<![CDATA[
				AND last_update_time<=#{endTime}
			]]>
		</if>
		AND pay_status = 1
		group by payee_type
		) as op
	</select>

<select id="shopIncomeStatDetail" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT 
	    <if test="dateType == 1">
	        sis.stat_date AS statDate,
	    </if>
	     <if test="dateType == 2">
	         date_format(sis.stat_date,'%Y-%m') AS statDate,
	    </if>
		 <if test="dateType == 3">
	        date_format(sis.stat_date,'%Y') AS statDate,
	    </if>
		SUM(IFNULL(sis.settle_price,0)) AS orderTotalMoney,
		SUM(IFNULL(sis.member_card_pay,0)) AS memberCardPayTotal,
		SUM(IFNULL(sis.charge_price,0)) AS chargeTotalMoney,
		SUM(IF(sis.income_type=1, 1,0)) AS orderTotalNum,
		SUM(IF(sis.income_type=2, 1,0)) AS chargeTotalNum,
		SUM(IFNULL(sis.settle_price,0)) - SUM(IFNULL(sis.member_card_pay,0)) + SUM(IFNULL(sis.charge_price,0)) AS incomeTotalIncome
	FROM 1dcq_shop_income_stat sis 
   WHERE sis.shop_id = #{shopId}
	<if test="dateType == 1">
	     <if test="startDate != null">
		   AND sis.stat_date &gt;= #{startDate}  
		</if>
		<if test="endDate != null">
			AND sis.stat_date &lt;= #{endDate}
		</if>
	</if>
     <if test="dateType == 2">
 		<if test="startDate != null">
			AND sis.stat_date &gt;= #{startDate}  
		</if>
		<if test="endDate != null">
			AND sis.stat_date  &lt;= #{endDate}
		</if>
    </if>
	 <if test="dateType == 3">
	      <if test="startDate != null">
	        <![CDATA[ AND year(sis.stat_date) >= year(#{startDate})  ]]>
		</if>
		<if test="endDate != null">
		     <![CDATA[ AND year(sis.stat_date) <= year(#{endDate})  ]]>
		</if>
    </if>
    GROUP BY statDate
   <if test="orderBy == 1">
	    order by statDate asc
	</if>
	<if test="orderBy == 2">
	    order by statDate desc
	</if>
	<if test="orderBy == 3">
	    order by incomeTotalIncome asc
	</if>
	<if test="orderBy == 4">
	    order by incomeTotalIncome desc
	</if>
	limit #{limit},#{pSize}
  </select>
  
  <select id="shopIncomeStatDetailCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(1) FROM (
	SELECT sis.stat_date
	FROM 1dcq_shop_income_stat sis
   WHERE sis.shop_id = #{shopId}
      <if test="dateType == 1">
        <if test="startDate != null">
			AND sis.stat_date &gt;= #{startDate}  
		</if>
		<if test="endDate != null">
			AND sis.stat_date  &lt;= #{endDate}
		</if>
	      GROUP BY sis.stat_date
	</if>
     <if test="dateType == 2">
 		<if test="startDate != null">
			AND sis.stat_date &gt;= #{startDate}  
		</if>
		<if test="endDate != null">
			AND sis.stat_date  &lt;= #{endDate}
		</if>
         GROUP BY date_format(sis.stat_date,'%Y-%m')
    </if>
	 <if test="dateType == 3">
	     <if test="startDate != null">
	        <![CDATA[ AND year(sis.stat_date) >= year(#{startDate})  ]]>
		</if>
		<if test="endDate != null">
		     <![CDATA[ AND year(sis.stat_date) <= year(#{endDate})  ]]>
		</if>
         GROUP BY date_format(sis.stat_date,'%Y')
    </if>) a
  </select>
   
	<select id="getOrderTotalCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		1dcq_order od
		WHERE
		od.shop_id = #{shopId}
		AND
		od.order_status
		IN
		(3,5)
		<if test="startTime!=null">
			AND od.last_update_time>=#{startTime}
		</if>
		<if test="endTime!=null">
			<![CDATA[
				AND od.last_update_time<=#{endTime}
			]]>
		</if>
	</select>

  <!-- 获取商铺营收统计详情接口 -->
  <select id="shopDayIncomeStatDetail" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		sis.order_id AS orderId,
		sis.order_title AS orderTitle,
		sis.order_time AS orderTime,
		sis.finish_time AS orderFinishTime,
		sis.settle_price AS orderMoney,
		sis.charge_price AS chargeMoney,
		sis.member_card_pay AS memberCardPay,
	    sis.income_type AS orderType,
	    (CASE WHEN sis.income_type =1 THEN IFNULL(sis.settle_price,0)  - IFNULL(sis.member_card_pay,0) 
	     WHEN sis.income_type = 2 THEN sis.charge_price END) AS incomeIncome
	FROM
		1dcq_shop_income_stat sis
	WHERE
		1=1
	<if test="shopId != null">
		AND shop_id = #{shopId}
	</if>
	<if test="queryDate != null">
		AND stat_date = #{queryDate}
	</if>
	<if test="orderBy == 1">
		order by sis.order_time asc
	</if>
	<if test="orderBy == 2">
		order by sis.order_time desc
	</if>
	<if test="orderBy == 3">
		order by incomeIncome asc
	</if>
	<if test="orderBy == 4">
		order by incomeIncome desc
	</if>
		limit #{limit},#{pSize}
  </select>
  <select id="shopDayIncomeStatDetailCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT
		count(*) 
	FROM
		1dcq_shop_income_stat sis
	WHERE
		1=1
	<if test="shopId != null">
		AND shop_id = #{shopId}
	</if>
	<if test="queryDate != null">
		AND stat_date = #{queryDate}
	</if>
  </select>


	<!-- 查询图片logo -->
	<select id="getBizLogo" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		ar.attachement_Id as attachementId,
		a.file_Url as fileUrl,
		ar.biz_Index as bizIndex,
		a.file_name as fileName,
		a.file_type as
		fileType
		FROM
		1dcq_attachment a
		LEFT JOIN 1dcq_attachment_relation ar ON a.attachement_id =
		ar.attachement_id
		WHERE
		ar.biz_id = #{bizId}
		AND
		ar.biz_type = #{bizType}
		<if test="picType!=null">
			AND ar.pic_type = #{picType}
		</if>
		limit #{n},#{m}
	</select>
	<select id="getAttachmentInfoById" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		a.file_Url as fileUrl,
		a.file_name as fileName,
		a.file_type as
		fileType
		FROM
		1dcq_attachment a
		WHERE
		a.attachement_id=#{attachmentId}
	</select>
	
	<select id="getAttachmentInfoByAnd" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		a.file_Url as fileUrl,
		a.file_name as fileName,
		a.file_type as
		fileType
		FROM
		1dcq_attachment a
		WHERE
		<trim prefixOverrides="AND">
			<if test="bizId != null"> AND biz_id = #{bizId}</if>
			<if test="bizType != null"> AND biz_type = #{bizType}</if>
			<if test="attachmentId != null"> AND attachement_id = #{attachmentId}</if>
		</trim>
		ORDER BY create_time DESC
	</select>
	
	<select id="getBizLogoCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		1dcq_attachment a
		LEFT JOIN 1dcq_attachment_relation ar ON a.attachement_id =
		ar.attachement_id
		WHERE
		ar.biz_id = #{bizId}
		AND
		ar.biz_type = #{bizType}
		<if test="picType!=null">
			AND ar.pic_type = #{picType}
		</if>
	</select>

	<!-- 查询场地类预定资源列表 -->
	<select id="getPlaceGoods" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		gg.`goods_group_id` AS groupGoodsId,
		g.`goods_id` AS goodsId,
		g.`standard_price` AS price,
		ggpv.`pro_value` AS proValue
		FROM
		1dcq_goods g
		INNER JOIN 1dcq_goods_property gp
		ON g.`goods_id` = gp.`goods_id`
		INNER JOIN 1dcq_goods_group_pro_values ggpv
		ON gp.`pro_values_id` = ggpv.`pro_values_id`
		INNER JOIN 1dcq_goods_group gg
		ON g.`goods_group_id` = gg.`goods_group_id`
		INNER JOIN 1dcq_goods_group_category_relation gcr
		ON gg.`goods_group_id` = gcr.`goods_group_id`
		INNER JOIN 1dcq_shop_resource r ON gcr.`group_category_id` =
		r.`goods_category_id`
		WHERE r.`resource_id` = #{resourceId}
		AND gg.`shop_id` = #{shopId}
		AND ggpv.`pro_value` LIKE concat('%',#{resourceDate},'%')
	</select>

	<!-- 查询资源是否被占 -->
	<select id="isUsedResource" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		`1dcq_order_shop_resource`
		WHERE shop_id = #{shopId}
		AND resource_type = 3
		AND status = 1
		AND biz_id = #{resourceId}
		AND reserve_resource_date = #{resourceDate}
		AND start_time &lt;= #{beginTime}
		AND end_time &gt;= #{endTime}
	</select>

	<!-- 根据用户id或者店铺id查询可用店铺信息 -->
	<select id="queryNormalShopListBy" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT s.shop_id AS shopId,
		s.shop_name AS shopName,
		a.file_url AS shopLogoUrl,
		s.column_id AS columnId,
		c.column_name AS columnName,
		s.shop_manager_name AS shopkeeper,
		s.member_discount AS memberDiscount,
		s.shop_status as shopStatus,
		s.audit_status as auditStatus,
		s.shop_classify as shopClassify,

		s.shop_identity  as shopIdentity,
		TRUNCATE(s.buy_v_money,2) as buyvMoney,
		s.buy_v_type as buyvType,

		ifnull(s.audit_desc,"") as auditDesc,
		ifnull(s.telephone,"") as telephone,
		ifnull(s.address,"") as address,
		ifnull(s.shop_manager_identity_card_no,"") as idCard,
		ifnull(s.chain_stores_type,0) as chainStoresType,
		ifnull(s.is_sign,0) as isSign,
		ifnull(s.percentage,0) as percentage
		FROM 1dcq_shop s
		INNER JOIN 1dcq_column c
		ON s.column_id = c.column_id
		LEFT JOIN 1dcq_attachment_relation ar
		ON s.shop_id = ar.biz_id
		AND ar.biz_type = 1
		AND ar.pic_type = 1
		LEFT JOIN 1dcq_attachment a
		ON ar.attachement_id = a.attachement_id
		WHERE s.shop_status NOT IN(2)
		<choose>
			<when test="bizType == 1">
				AND s.principal_id = #{bizId}
			</when>
			<when test="bizType == 2">
				AND s.shop_id = #{bizId}
			</when>
		</choose>
	</select>

	<!-- 查询雇员信息 -->
	<select id="queryShopEmployee" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT 
		shop_id AS shopId,
		is_check as isCheck,
		status,
		password,
		employee_id AS operatorId
		FROM 1dcq_shop_employee
		WHERE username = #{mobile}
		<if test="shopId != null">
			AND shop_id = #{shopId}
		</if>
		limit 1
	</select>
	
	<!-- 按条件查询雇员信息 -->
	<select id="queryShopEmployeeByMap" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		shop_id AS shopId,
		is_check as isCheck,
		status,
		password,
		employee_id AS operatorId
		FROM 1dcq_shop_employee
		<where>
			<if test="mobile != null">
				and (username = #{mobile} OR mobile = #{mobile})
			</if>
			<if test="shopId != null">
				AND shop_id = #{shopId}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
		</where>
		order by is_check desc,create_time desc 
<!-- 		limit 1 -->
	</select>
	
	<select id="queryEmployeeListByMap" parameterType="java.util.Map" resultMap="shopEmployeeMap">
		SELECT 
		 employee_id,
 		 shop_id,
 		 status,
		 username,
		 password,
		 employee_no,
		 skill,
		 sex,
		 is_check,
		 mobile,
		 user_id
		FROM 1dcq_shop_employee
		<where>
			<if test="mobile != null">
				and (username = #{mobile} OR mobile = #{mobile})
			</if>
			<if test="shopId != null">
				AND shop_id = #{shopId}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="employeeId != null">
				and employee_id = #{employeeId}
			</if>
		</where>
		order by create_time desc 
<!-- 		limit 1 -->
	</select>
	
	<!-- 根据shopId查询店老板id -->
	<select id="getUserByShopId" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		select
		principal_id
		from
		1dcq_shop
		where
		shop_id = #{shopId}
	</select>
	<update id="bookSwitch" parameterType="java.util.Map">
		UPDATE
		1dcq_shop
		SET
		<if test="settingType==1">
			is_home_service = #{flag},
		</if>
		<if test="settingType==2">
			book_flag = #{flag},
		</if>
		<if test="settingType==3">
			takeout_flag = #{flag},
		</if>
		<if test="settingType==4">
			is_home_service = #{flag},
		</if>
		confirm_minute = #{confirmMinute}
		WHERE
		shop_id=#{shopId}
	</update>

	<!-- 账务统计查询接口 -->
	<select id="getAccountingStat" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		sis.stat_date AS statDate,
		SUM(IF(sis.income_type =1,IFNULL(sis.cash_pay,0),0)) AS cashTotal,
		SUM(IF(sis.income_type =2,IFNULL(sis.cash_pay,0),0)) AS cashChargeTotal,
		SUM(IF(sis.income_type =1,IFNULL(sis.pos_pay,0),0)) AS posTotal,
		SUM(IF(sis.income_type =2,IFNULL(sis.pos_pay,0),0)) AS posChargeTotal,
		SUM(sis.onLine_pay) AS onLineTotal,
		SUM(sis.member_card_pay) AS memberCardTotal,
		SUM(sis.platform_serve_share_price) AS shopServiceSharePrice,
		SUM(ifnull(sis.charge_price,0)) AS chargePrice,
		SUM(ifnull(sis.settle_price, 0)) AS total,

		SUM(IF(sis.income_type =1,IFNULL(sis.free_pay,0),0)) AS freePayTotal,
		SUM(IF(sis.income_type =1,IFNULL(sis.custom_pay1,0),0)) AS customPay1Total,
		SUM(IF(sis.income_type =1,IFNULL(sis.custom_pay2,0),0)) AS customPay2Total,
		SUM(IF(sis.income_type =1,IFNULL(sis.custom_pay3,0),0)) AS customPay3Total

		FROM
		1dcq_shop_income_stat sis
		WHERE
		sis.shop_id in 
	    <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
        </foreach> 
		<if test="cashierId!=null">
			AND sis.cashier_id = #{cashierId}
		</if>
		<if test="startTime!=null">
			AND sis.stat_date &gt;= #{startTime}
		</if>
		<if test="endTime!=null">
			AND sis.stat_date &lt;= #{endTime}
		</if>
		GROUP BY
		sis.stat_date
		ORDER BY
		sis.stat_date DESC
		limit #{n},#{m}
	</select>
	<!-- 账务统计查询接口 -->
	<select id="getAccountingStatCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(1)
		FROM
		(
		SELECT
		sis.stat_date AS statDate,
		SUM(sis.cash_pay) AS cashTotal,
		SUM(sis.pos_pay) AS postTotal,
		SUM(sis.onLine_pay) AS onLineTotal,

		SUM(sis.free_pay) AS freePayTotal,
		SUM(sis.custom_pay1) AS customPay1Total,
		SUM(sis.custom_pay2) AS customPay2Total,
		SUM(sis.custom_pay3) AS customPay3Total
		FROM
		1dcq_shop_income_stat sis
		WHERE
		sis.shop_id in 
	    <foreach collection="shopId" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
        </foreach> 
		<if test="cashierId!=null">
			AND sis.cashier_id = #{cashierId}
		</if>
		<if test="startTime!=null">
			AND sis.stat_date &gt;= #{startTime}
		</if>
		<if test="endTime!=null">
			AND sis.stat_date &lt;= #{endTime}
		</if>
		GROUP BY
		sis.stat_date
		) a
	</select>
	<!-- 账务统计查询订单列表 -->
	<select id="getOrderList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		sis.order_title as orderTitle,
		sis.mobile as mobile,
		sis.settle_price as settlePrice,
		sis.order_time AS orderTime,
		sis.order_id AS orderId,
		sis.cash_pay AS cashPay,
		sis.pos_pay AS posPay,
		sis.onLine_pay AS onLinePay,
		sis.member_card_pay AS memberCardPay,
		o.goods_price_before_discount AS goodsPriceBeforeDiscount
		FROM
		1dcq_shop_income_stat sis
		INNER JOIN 1dcq_order o
		ON sis.order_id = o.order_id
		WHERE
		sis.shop_id = #{shopId}
		AND
		sis.stat_date = #{queryDate}
		ORDER BY
		sis.order_time DESC
		LIMIT #{n},#{m}
	</select>
	<!-- 账务统计查询订单列表数量接口 -->
	<select id="getOrderListCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		1dcq_shop_income_stat sis
		INNER JOIN 1dcq_order o
		ON sis.order_id = o.order_id
		WHERE
		sis.shop_id = #{shopId}
		AND
		sis.stat_date = #{queryDate}
	</select>
	<!-- 插入财务统计表数据 -->
	<select id="insertAccountingStat" parameterType="com.idcq.appserver.dto.shop.ShopIncomeStatDto">
		INSERT IGNORE INTO
		1dcq_shop_income_stat
		(
		stat_date,
		shop_id,
		order_id,
		order_title,
		mobile,
		settle_price,
		order_time,
		cash_pay,
		pos_pay,
		onLine_pay,
		member_card_pay,
		cashier_id,
		platform_serve_share_price,
		income_type,
		finish_time,
		charge_price,
		voucher_pay,
		free_pay,
		custom_pay1,
		custom_pay2,
		custom_pay3
		)
		VALUES
		(
		#{statDate},
		#{shopId},
		#{orderId},
		#{orderTitle},
		#{mobile},
		#{settlePrice},
		#{orderTime},
		#{cashPay},
		#{posPay},
		#{onLinePay},
		#{memberCardPay},
		#{cashierId},
		#{platformServeSharePrice},
		#{incomeType},
		#{finishTime},
		#{chargePrice},
		#{voucherPay},
		#{freePay},
		#{customPay1},
		#{customPay2},
		#{customPay3}
		)
	</select>

	<!-- PCS48：查询商铺导购员业绩列表接口 -->
	<select id="getSalerPerformanceList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
			ogs.employee_id AS employeeId,
			ogs.employee_no AS employeeNo,
			ogs.username AS employeeName,
			COUNT(o.order_id) AS orderNum,
			IFNULL(SUM(o.settle_price), 0) AS salesMoney
		FROM
			1dcq_order o
		INNER JOIN (
			SELECT
				og.biller_id,
				og.order_id,
				se.employee_id,
				se.employee_no,
				se.username
			FROM
				1dcq_order_goods og
			INNER JOIN 1dcq_shop_employee se ON og.biller_id = se.employee_id
			WHERE
				og.shop_id = #{shopId}
			GROUP BY
				og.order_id
		) ogs ON ogs.order_id = o.order_id
		WHERE
			o.shop_id = #{shopId}
		AND 
			date(o.order_finish_time) BETWEEN #{startDate} AND #{endDate}
		AND 
			o.order_status = 3
		GROUP BY  
			employeeId
		<if test="orderBy == -1 and sortBy == 1">
			order by salesMoney desc
		</if>
		<if test="orderBy == -1 and sortBy == 2">
			order by orderNum desc
		</if>
		<if test="orderBy == 1 and sortBy == 1">
			order by salesMoney asc
		</if>
		<if test="orderBy == 1 and sortBy == 2">
			order by orderNum asc
		</if>
		<if test="limit != null and pSize != null">
			LIMIT #{limit},#{pSize}
		</if>
	</select>
	
	<select id="getSalerPerformanceCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT ogs.employee_id)
			FROM
			1dcq_order o
		INNER JOIN (
			SELECT
				og.biller_id,
				og.order_id,
				se.employee_id,
				se.employee_no,
				se.username
			FROM
				1dcq_order_goods og
			INNER JOIN 1dcq_shop_employee se ON og.biller_id = se.employee_id
			WHERE
				og.shop_id = #{shopId}
			GROUP BY
				og.order_id
		) ogs ON ogs.order_id = o.order_id
		WHERE
			o.shop_id = #{shopId}
		AND 
			date(o.order_finish_time) BETWEEN #{startDate} AND #{endDate}
		AND 
			o.order_status = 3
	</select>
	
	<!-- 查询商铺服务人员信息 -->
	<select id="queryShopServerList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		se.employee_id as employeeId,
		se.employee_no as employeeCode,
		se.username as userName
		FROM
		1dcq_shop_employee se
		WHERE
		se.shop_id = #{shopId}
		AND
		se.employee_no is not null
		AND
		se.employee_no !=''
		<if test="employeeCode!=null">
			and se.employee_no = #{employeeCode}
		</if>
		order by se.last_update_time
	</select>
	<!-- 收银机增加员工 -->
	<insert id="insertEmployee" parameterType="com.idcq.appserver.dto.shop.ShopEmployeeDto"
		useGeneratedKeys="true">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="employeeId">
			SELECT LAST_INSERT_ID() AS employeeId
		</selectKey>
		INSERT
		1dcq_shop_employee
		(
		shop_id,
		username,
		employee_no,
		status,
		password,
		sex,
		skill,
		last_update_time
		)
		VALUES
		(
		#{shopId},
		#{userName},
		#{employeeCode},
		#{status},
		#{password},
		#{sex},
		#{skill},
		NOW()
		)
	</insert>
	<!-- 更新员工信息 -->
	<update id="updateEmployee" parameterType="com.idcq.appserver.dto.shop.ShopEmployeeDto">
		UPDATE
		1dcq_shop_employee
		SET
		username = #{userName},
		last_update_time = NOW()
		WHERE
		shop_id = #{shopId}
		AND
		employee_no = #{employeeCode}
	</update>
	
	<update id="updateEmployeeByDto" parameterType="com.idcq.appserver.dto.shop.ShopEmployeeDto">
		UPDATE
		1dcq_shop_employee
		<set>
			<if test="isCheck != null">
				is_check = #{isCheck},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="mobile != null">
				mobile = #{mobile},
			</if>
			<!-- 将姓名改成手机好  20160803 文震宇 -->
			<if test="userName != null">
				username = #{userName},
			</if>
			
			<if test="password != null">
				password = #{password},
			</if>
			last_update_time = NOW()
		</set>
		<where>
			<if test="shopId != null">
				and shop_id = #{shopId}
			</if>
			<if test="employeeId != null">
				and employee_id = #{employeeId}
			</if>
		</where>
	</update>
	
	
	<!-- 更新员工信息 -->
	<update id="updateEmployeePwd" parameterType="java.util.Map">
		UPDATE
		1dcq_shop_employee
		SET
		password = #{password},
		last_update_time = NOW()
		WHERE
		mobile = #{mobile}
	</update>
	<!-- 物理删除员工信息 -->
	<delete id="deleteEmployee" parameterType="com.idcq.appserver.dto.shop.ShopEmployeeDto">
		DELETE FROM
		1dcq_shop_employee
		WHERE
		shop_id = #{shopId}
		AND
		employee_no = #{employeeCode}
	</delete>
	<!-- 删除统计信息 -->
	<delete id="deleteShopIncomeStat" parameterType="java.lang.String">
		DELETE FROM
		1dcq_shop_income_stat
		WHERE
		order_id = #{orderId}
	</delete>
	
	<!-- 查询商铺店员是否存在 -->
	<select id="queryEmployeeByCodeAndShopId" parameterType="com.idcq.appserver.dto.shop.ShopEmployeeDto"
		resultType="java.lang.Long">
		SELECT
		employee_id
		FROM
		1dcq_shop_employee se
		WHERE
		se.shop_id = #{shopId}
		AND
		se.employee_no = #{employeeCode}
		limit 1
	</select>

	<!-- 取整数积分 -->
	<select id="getVantagesBy" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select floor(vantages) from 1dcq_shop_user_vantages where shop_id =
		#{shopId} and user_id = #{userId}
	</select>

	<!-- 根据cityId和查询日期获取活动店铺列表 -->
	<select id="getPromotionShop" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		a.act_code AS actCode,
		s.shop_id AS shopId,
		s.shop_name AS shopName,
		s.act_logo AS actLogoUrl,
		s.act_desc AS actProfile
		FROM
		1dcq_market_act a
		INNER JOIN 1dcq_market_act_shop s
		ON a.act_id = s.act_id
		WHERE s.city_id = #{cityId}
		AND is_on = 1
        <![CDATA[
			AND end_date >= STR_TO_DATE(#{queryDate},'%Y-%m-%d') 
			AND begin_date <= STR_TO_DATE(#{queryDate},'%Y-%m-%d')  
		]]>
		limit #{n},#{m}
	</select>
	<select id="getPromotionShopCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM
		1dcq_market_act a
		INNER JOIN 1dcq_market_act_shop s
		ON a.act_id = s.act_id
		WHERE s.city_id = #{cityId}
		AND s.is_on = 1
        <![CDATA[
			AND end_date >= STR_TO_DATE(#{queryDate},'%Y-%m-%d')   
			AND begin_date <= STR_TO_DATE(#{queryDate},'%Y-%m-%d')  
		]]>
	</select>

	<select id="getPromotionShopDetail" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT s.act_id AS actId,
		s.shop_id AS shopId,
		s.shop_name AS shopName,
		s.act_logo AS actLogoUrl,
		s.column_id AS columnId,
		s.shop_address AS address,
		s.shop_telphone AS telephone,
		s.shop_desc AS shopProfile,
		s.act_desc AS actProfile,
		s.comment AS actDetail,
		s.act_picture AS actPicture
		FROM
		1dcq_market_act_shop s
		WHERE s.shop_id = #{shopId}
		AND s.is_on = 1
		AND s.act_code = #{actCode}
	</select>

	<!-- 获取运营商发展的商铺列表接口 -->
	<select id="getOperateShopList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		DISTINCT s.shop_id AS shopId,
		t.town_id AS areaId,
		t.town_name AS areaName,
		s.shop_name AS shopName,
		cast(s.shop_status AS signed) AS shopStatus,
		s.create_time AS createTime
		FROM
		1dcq_agent AS a
		INNER JOIN
		1dcq_shop AS s
		ON
		s.create_time &gt;= a.agent_valid_from AND s.create_time &lt;= a.agent_valid_to
		INNER JOIN
		1dcq_town t
		ON t.town_id = a.town_id
		WHERE a.user_id = #{userId}
		AND a.agent_type
		= 50
		<if test="areaId != null">
			AND a.town_id = #{areaId}
		</if>
		<if test="shopStatus != null">
			AND s.shop_status IN
			<foreach collection="shopStatus" open="(" close=")"
				separator="," item="status">
				#{status}
			</foreach>
		</if>
	</select>
	<!-- 获取运营商发展的商铺总数 -->
	<select id="getOperateShopCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		1dcq_agent AS a
		INNER JOIN
		1dcq_shop AS s
		ON
		s.create_time &gt;= a.agent_valid_from AND s.create_time &lt;= a.agent_valid_to
		INNER JOIN
		1dcq_town t
		ON t.town_id = a.town_id
		WHERE a.user_id = #{userId}
		AND a.agent_type
		= 50
		<if test="areaId != null">
			AND a.town_id = #{areaId}
		</if>
		<if test="shopStatus != null">
			AND s.shop_status IN
			<foreach collection="shopStatus" open="(" close=")"
				separator="," item="status">
				#{status}
			</foreach>
		</if>
	</select>

	<select id="getOperateShopNumOfAgent" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM 1dcq_agent AS a
		INNER JOIN 1dcq_shop AS s
		ON s.create_time &gt;= a.agent_valid_from AND s.create_time &lt;=
		a.agent_valid_to
		WHERE a.user_id = #{userId}
		AND a.agent_type = 50
		<if test="areaId != null">
			AND a.town_id = #{areaId}
		</if>
		<if test="shopStatus != null">
			AND s.shop_status IN
			<foreach collection="shopStatus" open="(" close=")"
				separator="," item="status">
				#{status}
			</foreach>
		</if>
	</select>

	<select id="getOerpateDeviceShopNumOfAgent" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM
		(SELECT
		a.order_limit_price,a.agent_valid_from,a.agent_valid_to ,s.shop_id
		,SUM(o.settle_price) AS settlePriceSum,s.create_time,s.shop_status
		,d.device_id ,d.device_name FROM 1dcq_agent AS a
		INNER JOIN 1dcq_shop AS s
		ON s.create_time &gt;= a.agent_valid_from AND s.create_time &lt;=
		a.agent_valid_to
		INNER JOIN 1dcq_shop_device AS d
		ON d.shop_id =
		s.shop_id AND d.device_name = '收银机'
		INNER JOIN 1dcq_order AS o
		ON
		o.shop_id = s.shop_id AND o.is_member = 1 AND o.pay_status = 1
		WHERE
		a.user_id = #{userId} AND a.agent_type = 50
		<if test="areaId != null">
			AND a.town_id = #{areaId}
		</if>
		<if test="shopStatus != null">
			AND s.shop_status IN
			<foreach collection="shopStatus" open="(" close=")"
				separator="," item="status">
				#{status}
			</foreach>
		</if>
		GROUP BY s.shop_id)
		AS deviceShop
		WHERE deviceShop.settlePriceSum &gt;= deviceShop.order_limit_price
	</select>


	<!-- PCS22：查询商铺推荐统计接口 add by fufeiyong -->
	<select id="getTotalMember" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		count(*) as totalSum,
		(select count(*) from 1dcq_user u
		where u.refer_shop_id = #{shopId}
		and u.is_member=1
		and u.refer_type=1
		<if test="startTime!=null">
					<![CDATA[and Date(u.create_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
					<![CDATA[and Date(u.create_time) <= #{endTime}]]>
		</if>
		) as termSum
		FROM
		1dcq_user
		WHERE refer_shop_id = #{shopId}
		and is_member=1
		and refer_type=1
	</select>

	<select id="getShopResource" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT sr.resource_name AS resourceName,
		sr.resource_desc AS resourceDesc,
		sr.group_id AS groupId,
		sr.position_id AS positionId,
		srp.name AS positionName,
		sr.resource_index AS resourceNo,
		sr.resource_type AS resourceType
		FROM 1dcq_shop_resource sr
		INNER JOIN 1dcq_shop_resource_position srp
		ON sr.position_id = srp.position_id
		WHERE sr.shop_id = #{shopId}
		AND
		sr.resource_id = #{resourceId}
	</select>
	<!-- 查询推荐会员的总数 -->
	<select id="getShopRefTotalMembers" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*) as totalSum
		FROM
		1dcq_user
		WHERE refer_shop_id = #{shopId}
		and is_member=1
		and refer_type=1
		and
		refer_user_id!=0
	</select>
	<!-- 分页查询推荐的所有会员 -->
	<select id="getShopRefMembers" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		u.mobile,
		u.create_time,
		TRUNCATE(IFNULL((select sum(s.money)
		from 1dcq_shop_bill s
		INNER JOIN 1dcq_order o ON s.order_id =o.order_id
		WHERE s.shop_id = #{shopId}
		and o.user_id=u.user_id
		AND o.is_member = 1
		AND s.bill_type=6
		GROUP BY o.user_id ),0),2) as totalAccount
		FROM
		1dcq_user u
		WHERE u.refer_shop_id = #{shopId}
		and u.is_member=1
		and u.refer_type=1
		ORDER BY u.create_time DESC
		limit #{n},#{m}
	</select>
	<!-- 销售统计 按收营员查询 -->
	<select id="getShopSalestatisticsByCashier" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		0 as cashierId,
		"老板" as cashierName,
		count(*) as transactionTotal,
		IFNULL(sum(o.settle_price), 0) as transactionSum
		FROM 1dcq_order o
		where o.shop_id=#{shopId}
		and o.cashier_id=0
		and o.order_status=3
		<if test="startTime!=null">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		group by o.cashier_id
		UNION ALL
		SELECT
		s.employee_id as cashierId,
		
		CASE 
				WHEN s.fullname IS NOT NULL <![CDATA[ AND s.fullname <>'']]> THEN  s.fullname
				WHEN s.username IS NOT NULL <![CDATA[ AND s.username <>'']]> THEN  s.username
		      WHEN s.mobile IS NOT NULL  <![CDATA[ AND s.mobile <>'']]> THEN  s.mobile
		END as cashierName,
		count(*) as transactionTotal,
		IFNULL(sum(settle_price), 0) as transactionSum
		FROM 1dcq_order o
		inner join 1dcq_shop_employee s on o.cashier_id=s.employee_id
		where o.shop_id=#{shopId} and o.order_status=3
		<if test="startTime!=null">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		group by o.cashier_id
		<if test="flag!=1">
			limit #{n},#{m}
		</if>
	</select>
	
	
	
	
	
	<!-- 销售统计 按顾客类型查询 -->
	<select id="getShopSalestatisticsByIsMember" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		(CASE  
			WHEN o.is_member=1 THEN "会员" 
			ELSE  "非会员" 
		 END) AS memberType, 
		count(*) as transactionTotal,
		IFNULL(sum(o.settle_price), 0) as transactionSum
		FROM 1dcq_order o
		where o.shop_id=#{shopId}
		and o.order_status=3
		<if test="startTime!=null">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		group by o.is_member
		<if test="flag!=1">
			limit #{n},#{m}
		</if>
	</select>
	
	
	<!-- 销售统计 按支付方式查询 -->
	<select id="getShopSalestatisticsByPayWay" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
			IFNULL(SUM(t.cash_pay),0) AS cashPay,
			IFNULL(SUM(t.pos_pay),0) AS posPay,
			IFNULL(SUM(t.onLine_pay),0) AS onlinePay,
			IFNULL(SUM(t.member_card_pay),0) AS memberCardPay,
			IFNULL(SUM(t.free_pay),0) AS freePay,
			IFNULL(SUM(t.custom_pay1),0) AS customPay1,
			IFNULL(SUM(t.custom_pay2),0) AS customPay2,
			IFNULL(SUM(t.custom_pay3),0) AS customPay3
		FROM 1dcq_shop_income_stat t
		WHERE t.shop_id=#{shopId}
		<if test="startTime!=null">
			<![CDATA[and Date(t.stat_date) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(t.stat_date) <= #{endTime}]]>
		</if>
		<if test="incomeType !=null">
		    and t.income_type = #{incomeType}
		</if>
	</select>

	<!-- 按收银员的销售统计明细 -->
	<select id="getShopSalestatisticsByCashierId" parameterType="java.util.Map"
		resultType="java.util.Map">
		<!-- 无商品收银 -->
		select goodsGroupId, goodsId,goodsName,sum(goodsNumber) as goodsNumber,count(*) as salesTotal,SUM(salesSum) as salesSum from (
		SELECT
		0 as goodsId,
		0 as goodsGroupId,
		IFNULL(o.kefu_remark,"--") as goodsName,
		0 as goodsNumber,
		o.settle_price as salesSum
		FROM 1dcq_order o
		where o.shop_id=#{shopId}
		and o.cashier_id=#{cashierId}
		and o.order_status=3
		and (order_goods_number = 0 or order_goods_number is null)
		<if test="startTime!=null">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		<if test="memberType == 1 ">
			and o.is_member = 1
		</if>
		<if test="memberType == 0 ">
			and o.is_member = 0
		</if>
		UNION ALL
		<!-- 有商品收银  1dcq_goods表 goods_group_id字段为空表示是单个商品-->
		SELECT
		g.order_goods_id as goodsId,
		0 as goodsGroupId,
		g.goods_name as goodsName,
		g.goods_number as goodsNumber,
		g.goods_settle_price as salesSum
		FROM 1dcq_order o
		inner join 1dcq_order_goods g on g.order_id=o.order_id
		INNER JOIN  1dcq_goods goods ON goods.goods_id = g.goods_id 
		where o.shop_id=#{shopId} and o.cashier_id=#{cashierId} and o.order_status=3 
		and (goods.goods_group_id IS  NULL or goods.goods_group_id = 0)
		<if test="startTime!=null">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		<if test="memberType == 1 ">
			and o.is_member = 1
		</if>
		<if test="memberType == 0 ">
			and o.is_member = 0
		</if>
		UNION ALL
		<!-- 有商品收银  1dcq_goods表 goods_group_id字段为空表示是商品族下的商品   查询商品族的信息 -->
		SELECT
		0 as goodsId,
		gp.goods_group_id as goodsGroupId,
		gp.goods_name as goodsName,
		g.goods_number as goodsNumber,
		g.goods_settle_price as salesSum
		FROM 1dcq_order o
		inner join 1dcq_order_goods g on g.order_id=o.order_id
		INNER JOIN  1dcq_goods goods ON goods.goods_id = g.goods_id 
		INNER JOIN 1dcq_goods_group gp ON gp.goods_group_id = goods.goods_group_id
		where o.shop_id=#{shopId} and o.cashier_id=#{cashierId} and o.order_status=3 
		and goods.goods_group_id >0
		<if test="startTime!=nulll">
			<![CDATA[and Date(o.order_finish_time) >=#{startTime}]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[and Date(o.order_finish_time) <= #{endTime}]]>
		</if>
		<if test="memberType == 1 ">
			and o.is_member = 1
		</if>
		<if test="memberType == 0 ">
			and o.is_member = 0
		</if>	
		) a
		group by goodsName
		<if test="flag!=1">
			limit #{n},#{m}
		</if>
	</select>
	
	
	
	
	

	<!-- 商铺身份证号或银行卡号验证接口 -->
	<select id="verifyCardNo" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM 1dcq_shop s
		<if test="verifyMode!=2">
			inner join 1dcq_user u on s.principal_id=u.user_id
		</if>
		<if test="verifyMode==2">
			inner join 1dcq_bank_card b on b.user_id=s.shop_id
		</if>
		where
		<if test="verifyMode==0">
			s.shop_id=#{shopId}
			and right(s.shop_manager_identity_card_no,6) =#{identityCardNo}
		</if>
		<if test="verifyMode==1">
			s.shop_id=#{shopId}
			and s.shop_manager_identity_card_no = #{identityCardNo}
		</if>
		<if test="verifyMode==2">
			b.user_id=#{shopId}
			and b.account_type=2
			and b.card_number = #{bankCardNo}
		</if>
	</select>
	<!-- 根据用户id查询用户信息 -->
	<select id="getUserInfoByUserId" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select
		user_id as userId,
		is_shop_maneger as isShopManeger,
		is_member as isMember,
		userName as userName,
		identity_card_no as identityCardNo,
		true_name as trueName,
		mobile as mobile
		from 1dcq_user
		where user_id = #{userId}
	</select>

	<!-- 获取已开通城市列表 -->
	<select id="getOpenedCitis" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		p.province_id AS provinceId,
		p.province_name AS provinceName,
		c.city_id AS cityId,
		c.city_name AS cityName,
		c.city_short AS cityShort,
		c.first_letter AS firstLetter,
		count(s.shop_id) as shopCount
		FROM
		1dcq_shop s
		INNER JOIN 1dcq_city c ON s.city_id = c.city_id
		INNER JOIN
		1dcq_province p ON s.province_id = p.province_id
		WHERE
		1=1
		<if test="provinceId != null">
			AND p.province_id = #{provinceId}
		</if>
		group by c.city_id
		order by shopCount desc
		limit #{limit},#{pSize}
	</select>

	<!-- 获取已开通城市列表总数 -->
	<select id="getOpenedCitisCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(DISTINCT c.city_id)
		FROM
		1dcq_shop s
		INNER JOIN 1dcq_city c ON s.city_id = c.city_id
		INNER JOIN
		1dcq_province p ON s.province_id = p.province_id
		WHERE
		1=1
		<if test="provinceId != null">
			AND p.province_id = #{provinceId}
		</if>
	</select>

	<update id="batchUpdateShopMarketing" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open=""
			close="" separator=";">
			INSERT INTO 1dcq_shop_marketing(shop_id, business_area_activity_flag)
			values(#{item.shopId},#{item.businessAreaActivityFlag})
			ON DUPLICATE KEY UPDATE
			business_area_activity_flag=#{item.businessAreaActivityFlag}
		</foreach>
	</update>

	<!-- 查询是否存在同名的店铺 -->
	<select id="getShopByShopIdAndShopName" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		1dcq_shop s
		<where>
			s.shop_status!=2
			<if test="userId != null">
				AND s.principal_id = #{userId}
			</if>
			<if test="shopName != null">
				AND s.shop_name = trim(#{shopName})
			</if>
			<if test="shopId !=null">
				AND s.shop_id != #{shopId}
			</if>
		</where>

	</select>
	
	<select id="getAllShopEmployeeByMap" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		s.shop_id AS shopId,
		s.is_check as isCheck,
		2 as operatorType,
	 	s.employee_id AS operatorId,
		 (CASE  
			WHEN s.is_check=1 THEN u.identity_card_no 
			ELSE "null" 
		 END) AS idCard,
		  (CASE  
			WHEN s.is_check=1 THEN u.password 
			ELSE s.password 
		 END) AS password,  
		s.fullname AS userName  
		FROM 1dcq_shop_employee s
		left join 1dcq_user u on s.user_id = u.user_id 
		inner join 1dcq_shop sp on s.shop_id = sp.shop_id
		and sp.shop_status != 2
		<where>
			<if test="mobile != null">
				and 
				(
					(CASE  
						WHEN s.is_check=1 THEN u.mobile 
						ELSE s.mobile 
					 END) = #{mobile}
					 OR
					 (CASE  
						WHEN s.is_check=1 THEN u.username 
						ELSE s.username 
					 END) = #{mobile} 
				)
<!-- 				(s.username = #{mobile} OR s.mobile = #{mobile}) -->
			</if>
			<if test="shopId != null">
				AND s.shop_id = #{shopId}
			</if>
			and 
			(CASE  
				WHEN s.is_check=1 THEN u.is_member = 1 and u.status = 1
				ELSE s.status = 1 
			 END)
		</where>
	</select>
	
	<select id="getAllShopBossesByMap" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		s.shop_id AS shopId,
		"null" as isCheck,
		1 as operatorType,
		s.shop_manager_identity_card_no  as idCard,
		u.user_id  AS operatorId,
		u.password  AS password,
		(CASE  
			WHEN u.true_name is not null THEN u.true_name 
			ELSE u.username 
		 END) AS userName
<!-- 		u.username  AS userName   -->
		FROM 1dcq_user u
		inner join 1dcq_shop s on s.principal_id = u.user_id
		and s.shop_status != 2
		<where>
			<if test="mobile != null">
				(u.username = #{mobile} OR u.mobile = #{mobile})
			</if>
			and u.is_member = 1 and u.status = 1	
		</where>
	</select>
	<!-- 获取总店所属分店列表 -->
	<select id="getShopListByHeadShopId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			shop_id, 
			shop_status, 
			shop_name, 
		    chain_stores_type,
		    head_shop_id
		from 1dcq_shop
			where head_shop_id = #{headShopId}
	</select>	
</mapper>